(self.webpackChunkstorybook=self.webpackChunkstorybook||[]).push([[331],{"./node_modules/copy-to-clipboard/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var deselectCurrent=__webpack_require__("./node_modules/toggle-selection/index.js"),clipboardToIE11Formatting={"text/plain":"Text","text/html":"Url",default:"Text"};module.exports=function copy(text,options){var debug,message,reselectPrevious,range,selection,mark,success=!1;options||(options={}),debug=options.debug||!1;try{if(reselectPrevious=deselectCurrent(),range=document.createRange(),selection=document.getSelection(),(mark=document.createElement("span")).textContent=text,mark.ariaHidden="true",mark.style.all="unset",mark.style.position="fixed",mark.style.top=0,mark.style.clip="rect(0, 0, 0, 0)",mark.style.whiteSpace="pre",mark.style.webkitUserSelect="text",mark.style.MozUserSelect="text",mark.style.msUserSelect="text",mark.style.userSelect="text",mark.addEventListener("copy",function(e){if(e.stopPropagation(),options.format)if(e.preventDefault(),void 0===e.clipboardData){debug&&console.warn("unable to use e.clipboardData"),debug&&console.warn("trying IE specific stuff"),window.clipboardData.clearData();var format=clipboardToIE11Formatting[options.format]||clipboardToIE11Formatting.default;window.clipboardData.setData(format,text)}else e.clipboardData.clearData(),e.clipboardData.setData(options.format,text);options.onCopy&&(e.preventDefault(),options.onCopy(e.clipboardData))}),document.body.appendChild(mark),range.selectNodeContents(mark),selection.addRange(range),!document.execCommand("copy"))throw new Error("copy command was unsuccessful");success=!0}catch(err){debug&&console.error("unable to copy using execCommand: ",err),debug&&console.warn("trying IE specific stuff");try{window.clipboardData.setData(options.format||"text",text),options.onCopy&&options.onCopy(window.clipboardData),success=!0}catch(err){debug&&console.error("unable to copy using clipboardData: ",err),debug&&console.error("falling back to prompt"),message=function format(message){var copyKey=(/mac os x/i.test(navigator.userAgent)?"âŒ˜":"Ctrl")+"+C";return message.replace(/#{\s*key\s*}/g,copyKey)}("message"in options?options.message:"Copy to clipboard: #{key}, Enter"),window.prompt(message,text)}}finally{selection&&("function"==typeof selection.removeRange?selection.removeRange(range):selection.removeAllRanges()),mark&&document.body.removeChild(mark),reselectPrevious()}return success}},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./stories/StorybookComponents/InlineCode/InlineCode.css":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".InlineCode {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: var(--base-size-4);\n  white-space: nowrap;\n}\n","",{version:3,sources:["webpack://./stories/StorybookComponents/InlineCode/InlineCode.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,mBAAmB;EACnB,mBAAmB;EACnB,uBAAuB;EACvB,mBAAmB;AACrB",sourcesContent:[".InlineCode {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: var(--base-size-4);\n  white-space: nowrap;\n}\n"],sourceRoot:""}]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/toggle-selection/index.js":module=>{module.exports=function(){var selection=document.getSelection();if(!selection.rangeCount)return function(){};for(var active=document.activeElement,ranges=[],i=0;i<selection.rangeCount;i++)ranges.push(selection.getRangeAt(i));switch(active.tagName.toUpperCase()){case"INPUT":case"TEXTAREA":active.blur();break;default:active=null}return selection.removeAllRanges(),function(){"Caret"===selection.type&&selection.removeAllRanges(),selection.rangeCount||ranges.forEach(function(range){selection.addRange(range)}),active&&active.focus()}}},"./stories/Color/Patterns/AllPatterns.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Avatar:()=>Avatar,Button:()=>Button,ContributionGraph:()=>ContributionGraph,Control:()=>Control,Counter:()=>Counter,Focus:()=>Focus,Header:()=>Header,Label:()=>Label,Menu:()=>Menu,Overlay:()=>Overlay,SelectMenu:()=>SelectMenu,Selection:()=>Selection,SideNav:()=>SideNav,Syntax:()=>Syntax,TimelineBadge:()=>TimelineBadge,Tooltip:()=>Tooltip,Treeview:()=>Treeview,UnderlineNav:()=>UnderlineNav,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var _dist_docs_functional_themes_light_json__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../dist/docs/functional/themes/light.json"),_StorybookComponents_ColorTokenSwatch_ColorTokenSwatch__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./stories/StorybookComponents/ColorTokenSwatch/ColorTokenSwatch.tsx"),_primer_react_experimental__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@primer/react/lib-esm/DataTable/index.js"),_primer_react_experimental__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@primer/react/lib-esm/DataTable/DataTable.js"),_StorybookComponents_InlineCode_InlineCode__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./stories/StorybookComponents/InlineCode/InlineCode.tsx"),_utilities_getTokensByName__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./stories/utilities/getTokensByName.ts"),_primer_react__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@primer/react/lib-esm/Box/Box.js"),_primer_react__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/@primer/react/lib-esm/Token/Token.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Color/Patterns",parameters:{controls:{hideNoControlsWarning:!0},options:{showPanel:!1}}},Avatar=()=>{const data=(0,_utilities_getTokensByName__WEBPACK_IMPORTED_MODULE_6__.R)(_dist_docs_functional_themes_light_json__WEBPACK_IMPORTED_MODULE_1__,"avatar").map(token=>({id:token.name,...token}));return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(_primer_react_experimental__WEBPACK_IMPORTED_MODULE_3__.X.Container,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("h1",{className:"sr-only",id:"table-heading",children:"Avatar"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_primer_react_experimental__WEBPACK_IMPORTED_MODULE_4__.b,{"aria-labelledby":"pattern",data,columns:[{header:"Sample",field:"name",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_StorybookComponents_ColorTokenSwatch_ColorTokenSwatch__WEBPACK_IMPORTED_MODULE_2__.X,{bgColor:row.name.includes("bgColor")||row.name.includes("iconColor")?row.name:void 0,textColor:row.name.includes("fgColor")?row.name:void 0,shadowColor:row.name.includes("shadow")?row.name:void 0,borderColor:row.name.includes("borderColor")?row.name:void 0})},{header:"Token",field:"name",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_StorybookComponents_InlineCode_InlineCode__WEBPACK_IMPORTED_MODULE_5__.R,{value:row.name,copyClipboard:!0,cssVar:!0})},{header:"Output value",field:"value",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("p",{children:row.value})}]})]})};Avatar.displayName="Avatar";const Control=()=>{const control=(0,_utilities_getTokensByName__WEBPACK_IMPORTED_MODULE_6__.R)(_dist_docs_functional_themes_light_json__WEBPACK_IMPORTED_MODULE_1__,"control").map(token=>({id:token.name,...token})),controlKnob=(0,_utilities_getTokensByName__WEBPACK_IMPORTED_MODULE_6__.R)(_dist_docs_functional_themes_light_json__WEBPACK_IMPORTED_MODULE_1__,"controlKnob").map(token=>({id:token.name,...token})),controlTrack=(0,_utilities_getTokensByName__WEBPACK_IMPORTED_MODULE_6__.R)(_dist_docs_functional_themes_light_json__WEBPACK_IMPORTED_MODULE_1__,"controlTrack").map(token=>({id:token.name,...token})),data=control.concat(controlKnob,controlTrack).map((item,index)=>({...item,index}));return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(_primer_react_experimental__WEBPACK_IMPORTED_MODULE_3__.X.Container,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("h1",{className:"sr-only",id:"table-heading",children:"Control"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_primer_react_experimental__WEBPACK_IMPORTED_MODULE_4__.b,{"aria-labelledby":"pattern",data,columns:[{header:"Sample",field:"name",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_StorybookComponents_ColorTokenSwatch_ColorTokenSwatch__WEBPACK_IMPORTED_MODULE_2__.X,{bgColor:row.name.includes("bgColor")||row.name.includes("iconColor")?row.name:void 0,textColor:row.name.includes("fgColor")?row.name:void 0,shadowColor:row.name.includes("shadow")?row.name:void 0,borderColor:row.name.includes("borderColor")?row.name:void 0})},{header:"Token",field:"name",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_StorybookComponents_InlineCode_InlineCode__WEBPACK_IMPORTED_MODULE_5__.R,{value:row.name,copyClipboard:!0,cssVar:!0})},{header:"Output value",field:"value",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("p",{children:row.value})}]})]})};Control.displayName="Control";const Counter=()=>{const data=(0,_utilities_getTokensByName__WEBPACK_IMPORTED_MODULE_6__.R)(_dist_docs_functional_themes_light_json__WEBPACK_IMPORTED_MODULE_1__,"counter").map(token=>({id:token.name,...token}));return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(_primer_react_experimental__WEBPACK_IMPORTED_MODULE_3__.X.Container,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("h1",{className:"sr-only",id:"table-heading",children:"Counter"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_primer_react_experimental__WEBPACK_IMPORTED_MODULE_4__.b,{"aria-labelledby":"pattern",data,columns:[{header:"Sample",field:"name",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_StorybookComponents_ColorTokenSwatch_ColorTokenSwatch__WEBPACK_IMPORTED_MODULE_2__.X,{bgColor:row.name.includes("bgColor")||row.name.includes("iconColor")?row.name:void 0,textColor:row.name.includes("fgColor")?row.name:void 0,shadowColor:row.name.includes("shadow")?row.name:void 0,borderColor:row.name.includes("borderColor")?row.name:void 0})},{header:"Token",field:"name",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_StorybookComponents_InlineCode_InlineCode__WEBPACK_IMPORTED_MODULE_5__.R,{value:row.name,copyClipboard:!0,cssVar:!0})},{header:"Output value",field:"value",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("p",{children:row.value})}]})]})};Counter.displayName="Counter";const Button=()=>{const button=(0,_utilities_getTokensByName__WEBPACK_IMPORTED_MODULE_6__.R)(_dist_docs_functional_themes_light_json__WEBPACK_IMPORTED_MODULE_1__,"button").map(token=>({id:token.name,...token})),buttonCounter=(0,_utilities_getTokensByName__WEBPACK_IMPORTED_MODULE_6__.R)(_dist_docs_functional_themes_light_json__WEBPACK_IMPORTED_MODULE_1__,"buttonCounter").map(token=>({id:token.name,...token})),data=button.concat(buttonCounter).map((item,index)=>({...item,index}));return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(_primer_react_experimental__WEBPACK_IMPORTED_MODULE_3__.X.Container,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("h1",{className:"sr-only",id:"table-heading",children:"Button"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_primer_react_experimental__WEBPACK_IMPORTED_MODULE_4__.b,{"aria-labelledby":"pattern",data,columns:[{header:"Sample",field:"name",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_StorybookComponents_ColorTokenSwatch_ColorTokenSwatch__WEBPACK_IMPORTED_MODULE_2__.X,{bgColor:row.name.includes("bgColor")||row.name.includes("iconColor")?row.name:void 0,textColor:row.name.includes("fgColor")?row.name:void 0,shadowColor:row.name.includes("shadow")?row.name:void 0,borderColor:row.name.includes("borderColor")?row.name:void 0})},{header:"Token",field:"name",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_StorybookComponents_InlineCode_InlineCode__WEBPACK_IMPORTED_MODULE_5__.R,{value:row.name,copyClipboard:!0,cssVar:!0})},{header:"Output value",field:"value",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("p",{children:row.value})}]})]})};Button.displayName="Button";const Focus=()=>{const data=(0,_utilities_getTokensByName__WEBPACK_IMPORTED_MODULE_6__.R)(_dist_docs_functional_themes_light_json__WEBPACK_IMPORTED_MODULE_1__,"focus-outlineColor").map(token=>({id:token.name,...token}));return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(_primer_react_experimental__WEBPACK_IMPORTED_MODULE_3__.X.Container,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("h1",{className:"sr-only",id:"table-heading",children:"Focus"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_primer_react_experimental__WEBPACK_IMPORTED_MODULE_4__.b,{"aria-labelledby":"pattern",data,columns:[{header:"Sample",field:"name",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_StorybookComponents_ColorTokenSwatch_ColorTokenSwatch__WEBPACK_IMPORTED_MODULE_2__.X,{outlineColor:row.name.includes("outlineColor")?row.name:void 0})},{header:"Token",field:"name",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_StorybookComponents_InlineCode_InlineCode__WEBPACK_IMPORTED_MODULE_5__.R,{value:row.name,copyClipboard:!0,cssVar:!0})},{header:"Output value",field:"value",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("p",{children:row.value})}]})]})};Focus.displayName="Focus";const Header=()=>{const data=(0,_utilities_getTokensByName__WEBPACK_IMPORTED_MODULE_6__.R)(_dist_docs_functional_themes_light_json__WEBPACK_IMPORTED_MODULE_1__,"header").map(token=>({id:token.name,...token}));return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(_primer_react_experimental__WEBPACK_IMPORTED_MODULE_3__.X.Container,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("h1",{className:"sr-only",id:"table-heading",children:"Header"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_primer_react_experimental__WEBPACK_IMPORTED_MODULE_4__.b,{"aria-labelledby":"pattern",data,columns:[{header:"Sample",field:"name",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_StorybookComponents_ColorTokenSwatch_ColorTokenSwatch__WEBPACK_IMPORTED_MODULE_2__.X,{bgColor:row.name.includes("bgColor")||row.name.includes("iconColor")?row.name:void 0,textColor:row.name.includes("fgColor")?row.name:void 0,shadowColor:row.name.includes("shadow")?row.name:void 0,borderColor:row.name.includes("borderColor")?row.name:void 0})},{header:"Token",field:"name",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_StorybookComponents_InlineCode_InlineCode__WEBPACK_IMPORTED_MODULE_5__.R,{value:row.name,copyClipboard:!0,cssVar:!0})},{header:"Output value",field:"value",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("p",{children:row.value})}]})]})};Header.displayName="Header";const Menu=()=>{const data=(0,_utilities_getTokensByName__WEBPACK_IMPORTED_MODULE_6__.R)(_dist_docs_functional_themes_light_json__WEBPACK_IMPORTED_MODULE_1__,"menu").map(token=>({id:token.name,...token}));return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(_primer_react_experimental__WEBPACK_IMPORTED_MODULE_3__.X.Container,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("h1",{className:"sr-only",id:"table-heading",children:"Menu"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_primer_react_experimental__WEBPACK_IMPORTED_MODULE_4__.b,{"aria-labelledby":"pattern",data,columns:[{header:"Sample",field:"name",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_StorybookComponents_ColorTokenSwatch_ColorTokenSwatch__WEBPACK_IMPORTED_MODULE_2__.X,{bgColor:row.name.includes("bgColor")||row.name.includes("iconColor")?row.name:void 0,textColor:row.name.includes("fgColor")?row.name:void 0,shadowColor:row.name.includes("shadow")?row.name:void 0,borderColor:row.name.includes("borderColor")?row.name:void 0})},{header:"Token",field:"name",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_StorybookComponents_InlineCode_InlineCode__WEBPACK_IMPORTED_MODULE_5__.R,{value:row.name,copyClipboard:!0,cssVar:!0})},{header:"Output value",field:"value",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("p",{children:row.value})}]})]})};Menu.displayName="Menu";const Overlay=()=>{const data=(0,_utilities_getTokensByName__WEBPACK_IMPORTED_MODULE_6__.R)(_dist_docs_functional_themes_light_json__WEBPACK_IMPORTED_MODULE_1__,"overlay").map(token=>({id:token.name,...token}));return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(_primer_react_experimental__WEBPACK_IMPORTED_MODULE_3__.X.Container,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("h1",{className:"sr-only",id:"table-heading",children:"Overlay"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_primer_react_experimental__WEBPACK_IMPORTED_MODULE_4__.b,{"aria-labelledby":"pattern",data,columns:[{header:"Sample",field:"name",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_StorybookComponents_ColorTokenSwatch_ColorTokenSwatch__WEBPACK_IMPORTED_MODULE_2__.X,{bgColor:row.name.includes("bgColor")||row.name.includes("iconColor")?row.name:void 0,textColor:row.name.includes("fgColor")?row.name:void 0,shadowColor:row.name.includes("shadow")?row.name:void 0,borderColor:row.name.includes("borderColor")?row.name:void 0})},{header:"Token",field:"name",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_StorybookComponents_InlineCode_InlineCode__WEBPACK_IMPORTED_MODULE_5__.R,{value:row.name,copyClipboard:!0,cssVar:!0})},{header:"Output value",field:"value",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("p",{children:row.value})}]})]})};Overlay.displayName="Overlay";const SelectMenu=()=>{const data=(0,_utilities_getTokensByName__WEBPACK_IMPORTED_MODULE_6__.R)(_dist_docs_functional_themes_light_json__WEBPACK_IMPORTED_MODULE_1__,"selectMenu").map(token=>({id:token.name,...token}));return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(_primer_react_experimental__WEBPACK_IMPORTED_MODULE_3__.X.Container,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("h1",{className:"sr-only",id:"table-heading",children:"SelectMenu"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_primer_react_experimental__WEBPACK_IMPORTED_MODULE_4__.b,{"aria-labelledby":"pattern",data,columns:[{header:"Sample",field:"name",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_StorybookComponents_ColorTokenSwatch_ColorTokenSwatch__WEBPACK_IMPORTED_MODULE_2__.X,{bgColor:row.name.includes("bgColor")||row.name.includes("iconColor")?row.name:void 0,textColor:row.name.includes("fgColor")?row.name:void 0,shadowColor:row.name.includes("shadow")?row.name:void 0,borderColor:row.name.includes("borderColor")?row.name:void 0})},{header:"Token",field:"name",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_StorybookComponents_InlineCode_InlineCode__WEBPACK_IMPORTED_MODULE_5__.R,{value:row.name,copyClipboard:!0,cssVar:!0})},{header:"Output value",field:"value",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("p",{children:row.value})}]})]})};SelectMenu.displayName="SelectMenu";const SideNav=()=>{const data=(0,_utilities_getTokensByName__WEBPACK_IMPORTED_MODULE_6__.R)(_dist_docs_functional_themes_light_json__WEBPACK_IMPORTED_MODULE_1__,"sideNav").map(token=>({id:token.name,...token}));return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(_primer_react_experimental__WEBPACK_IMPORTED_MODULE_3__.X.Container,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("h1",{className:"sr-only",id:"table-heading",children:"SideNav"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_primer_react_experimental__WEBPACK_IMPORTED_MODULE_4__.b,{"aria-labelledby":"pattern",data,columns:[{header:"Sample",field:"name",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_StorybookComponents_ColorTokenSwatch_ColorTokenSwatch__WEBPACK_IMPORTED_MODULE_2__.X,{bgColor:row.name.includes("bgColor")||row.name.includes("iconColor")?row.name:void 0,textColor:row.name.includes("fgColor")?row.name:void 0,shadowColor:row.name.includes("shadow")?row.name:void 0,borderColor:row.name.includes("borderColor")?row.name:void 0})},{header:"Token",field:"name",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_StorybookComponents_InlineCode_InlineCode__WEBPACK_IMPORTED_MODULE_5__.R,{value:row.name,copyClipboard:!0,cssVar:!0})},{header:"Output value",field:"value",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("p",{children:row.value})}]})]})};SideNav.displayName="SideNav";const TimelineBadge=()=>{const data=(0,_utilities_getTokensByName__WEBPACK_IMPORTED_MODULE_6__.R)(_dist_docs_functional_themes_light_json__WEBPACK_IMPORTED_MODULE_1__,"timelineBadge").map(token=>({id:token.name,...token}));return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(_primer_react_experimental__WEBPACK_IMPORTED_MODULE_3__.X.Container,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("h1",{className:"sr-only",id:"table-heading",children:"TimelineBadge"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_primer_react_experimental__WEBPACK_IMPORTED_MODULE_4__.b,{"aria-labelledby":"pattern",data,columns:[{header:"Sample",field:"name",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_StorybookComponents_ColorTokenSwatch_ColorTokenSwatch__WEBPACK_IMPORTED_MODULE_2__.X,{bgColor:row.name.includes("bgColor")||row.name.includes("iconColor")?row.name:void 0,textColor:row.name.includes("fgColor")?row.name:void 0,shadowColor:row.name.includes("shadow")?row.name:void 0,borderColor:row.name.includes("borderColor")?row.name:void 0})},{header:"Token",field:"name",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_StorybookComponents_InlineCode_InlineCode__WEBPACK_IMPORTED_MODULE_5__.R,{value:row.name,copyClipboard:!0,cssVar:!0})},{header:"Output value",field:"value",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("p",{children:row.value})}]})]})};TimelineBadge.displayName="TimelineBadge";const UnderlineNav=()=>{const data=(0,_utilities_getTokensByName__WEBPACK_IMPORTED_MODULE_6__.R)(_dist_docs_functional_themes_light_json__WEBPACK_IMPORTED_MODULE_1__,"underlineNav").map(token=>({id:token.name,...token}));return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(_primer_react_experimental__WEBPACK_IMPORTED_MODULE_3__.X.Container,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("h1",{className:"sr-only",id:"table-heading",children:"UnderlineNav"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_primer_react_experimental__WEBPACK_IMPORTED_MODULE_4__.b,{"aria-labelledby":"table-heading",data,columns:[{header:"Sample",field:"name",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_StorybookComponents_ColorTokenSwatch_ColorTokenSwatch__WEBPACK_IMPORTED_MODULE_2__.X,{bgColor:row.name.includes("bgColor")||row.name.includes("iconColor")?row.name:void 0,textColor:row.name.includes("fgColor")?row.name:void 0,shadowColor:row.name.includes("shadow")?row.name:void 0,borderColor:row.name.includes("borderColor")?row.name:void 0})},{header:"Token",field:"name",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_StorybookComponents_InlineCode_InlineCode__WEBPACK_IMPORTED_MODULE_5__.R,{value:row.name,copyClipboard:!0,cssVar:!0})},{header:"Output value",field:"value",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("p",{children:row.value})}]})]})};UnderlineNav.displayName="UnderlineNav";const Selection=()=>{const data=(0,_utilities_getTokensByName__WEBPACK_IMPORTED_MODULE_6__.R)(_dist_docs_functional_themes_light_json__WEBPACK_IMPORTED_MODULE_1__,"selection").map(token=>({id:token.name,...token}));return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(_primer_react_experimental__WEBPACK_IMPORTED_MODULE_3__.X.Container,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("h1",{className:"sr-only",id:"selection",children:"Text selection"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_primer_react_experimental__WEBPACK_IMPORTED_MODULE_4__.b,{"aria-labelledby":"selection",data,columns:[{header:"Sample",field:"name",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_StorybookComponents_ColorTokenSwatch_ColorTokenSwatch__WEBPACK_IMPORTED_MODULE_2__.X,{selectionColor:row.name.includes("bgColor")||row.name.includes("iconColor")?row.name:void 0})},{header:"Token",field:"name",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_StorybookComponents_InlineCode_InlineCode__WEBPACK_IMPORTED_MODULE_5__.R,{value:row.name,copyClipboard:!0,cssVar:!0})},{header:"Output value",field:"value",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("p",{children:row.value})}]})]})};Selection.displayName="Selection";const Tooltip=()=>{const data=(0,_utilities_getTokensByName__WEBPACK_IMPORTED_MODULE_6__.R)(_dist_docs_functional_themes_light_json__WEBPACK_IMPORTED_MODULE_1__,"tooltip").map(token=>({id:token.name,...token}));return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(_primer_react_experimental__WEBPACK_IMPORTED_MODULE_3__.X.Container,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("h1",{className:"sr-only",id:"tooltip",children:"Tooltip"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_primer_react_experimental__WEBPACK_IMPORTED_MODULE_4__.b,{"aria-labelledby":"tooltip",data,columns:[{header:"Sample",field:"name",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_StorybookComponents_ColorTokenSwatch_ColorTokenSwatch__WEBPACK_IMPORTED_MODULE_2__.X,{bgColor:row.name.includes("bgColor")||row.name.includes("iconColor")?row.name:void 0,textColor:row.name.includes("fgColor")?row.name:void 0,shadowColor:row.name.includes("shadow")?row.name:void 0,borderColor:row.name.includes("borderColor")?row.name:void 0})},{header:"Token",field:"name",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_StorybookComponents_InlineCode_InlineCode__WEBPACK_IMPORTED_MODULE_5__.R,{value:row.name,copyClipboard:!0,cssVar:!0})},{header:"Output value",field:"value",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("p",{children:row.value})}]})]})};Tooltip.displayName="Tooltip";const Treeview=()=>{const data=(0,_utilities_getTokensByName__WEBPACK_IMPORTED_MODULE_6__.R)(_dist_docs_functional_themes_light_json__WEBPACK_IMPORTED_MODULE_1__,"treeViewItem").map(token=>({id:token.name,...token}));return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(_primer_react_experimental__WEBPACK_IMPORTED_MODULE_3__.X.Container,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("h1",{className:"sr-only",id:"treeViewItem",children:"Treeview"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_primer_react_experimental__WEBPACK_IMPORTED_MODULE_4__.b,{"aria-labelledby":"treeViewItem",data,columns:[{header:"Sample",field:"name",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_StorybookComponents_ColorTokenSwatch_ColorTokenSwatch__WEBPACK_IMPORTED_MODULE_2__.X,{bgColor:row.name.includes("bgColor")||row.name.includes("iconColor")?row.name:void 0,textColor:row.name.includes("fgColor")?row.name:void 0,shadowColor:row.name.includes("shadow")?row.name:void 0,borderColor:row.name.includes("borderColor")?row.name:void 0})},{header:"Token",field:"name",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_StorybookComponents_InlineCode_InlineCode__WEBPACK_IMPORTED_MODULE_5__.R,{value:row.name,copyClipboard:!0,cssVar:!0})},{header:"Output value",field:"value",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("p",{children:row.value})}]})]})};Treeview.displayName="Treeview";const ContributionGraph=()=>{const data=(0,_utilities_getTokensByName__WEBPACK_IMPORTED_MODULE_6__.R)(_dist_docs_functional_themes_light_json__WEBPACK_IMPORTED_MODULE_1__,"contribution").map(token=>({id:token.name,...token}));return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(_primer_react_experimental__WEBPACK_IMPORTED_MODULE_3__.X.Container,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("h1",{className:"sr-only",id:"contribution",children:"Contribution graph"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_primer_react_experimental__WEBPACK_IMPORTED_MODULE_4__.b,{"aria-labelledby":"contribution",data,columns:[{header:"Sample",field:"name",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_StorybookComponents_ColorTokenSwatch_ColorTokenSwatch__WEBPACK_IMPORTED_MODULE_2__.X,{bgColor:row.name.includes("bgColor")||row.name.includes("iconColor")?row.name:void 0,textColor:row.name.includes("fgColor")?row.name:void 0,shadowColor:row.name.includes("shadow")?row.name:void 0,borderColor:row.name.includes("borderColor")?row.name:void 0})},{header:"Token",field:"name",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_StorybookComponents_InlineCode_InlineCode__WEBPACK_IMPORTED_MODULE_5__.R,{value:row.name,copyClipboard:!0,cssVar:!0})},{header:"Output value",field:"value",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("p",{children:row.value})}]})]})};ContributionGraph.displayName="ContributionGraph";const Label=()=>{const data=(0,_utilities_getTokensByName__WEBPACK_IMPORTED_MODULE_6__.R)(_dist_docs_functional_themes_light_json__WEBPACK_IMPORTED_MODULE_1__,"label").map(token=>({id:token.name,...token})),colors=[...new Set(data.map(({id})=>id.replace(/label-([a-zA-Z0-9]+)-.*/,"$1")))];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("h1",{id:"label",children:"Labels"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_primer_react__WEBPACK_IMPORTED_MODULE_7__.A,{paddingBottom:5,sx:{gap:2,display:"flex"},children:colors.map(color=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_primer_react__WEBPACK_IMPORTED_MODULE_8__.A,{text:color,sx:{backgroundColor:`var(--label-${color}-bgColor-rest)`,color:`var(--label-${color}-fgColor-rest)`,borderColor:"transparent","&:hover":{backgroundColor:`var(--label-${color}-bgColor-hover)`,color:`var(--label-${color}-fgColor-hover)`,cursor:"pointer"},"&:active":{backgroundColor:`var(--label-${color}-bgColor-active)`,color:`var(--label-${color}-fgColor-active)`,cursor:"pointer"}}}))}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_primer_react_experimental__WEBPACK_IMPORTED_MODULE_3__.X.Container,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_primer_react_experimental__WEBPACK_IMPORTED_MODULE_4__.b,{"aria-labelledby":"label",data,columns:[{header:"Sample",field:"name",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_StorybookComponents_ColorTokenSwatch_ColorTokenSwatch__WEBPACK_IMPORTED_MODULE_2__.X,{bgColor:row.name.includes("bgColor")||row.name.includes("iconColor")?row.name:void 0,textColor:row.name.includes("fgColor")?row.name:void 0,shadowColor:row.name.includes("shadow")?row.name:void 0,borderColor:row.name.includes("borderColor")?row.name:void 0})},{header:"Token",field:"name",renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_StorybookComponents_InlineCode_InlineCode__WEBPACK_IMPORTED_MODULE_5__.R,{value:row.name,copyClipboard:!0,cssVar:!0})},{header:"Output value",field:"value",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("p",{children:row.value})}]})})]})},Syntax=()=>{const data=(0,_utilities_getTokensByName__WEBPACK_IMPORTED_MODULE_6__.R)(_dist_docs_functional_themes_light_json__WEBPACK_IMPORTED_MODULE_1__,"color").map(token=>({id:token.name,...token}));return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(_primer_react_experimental__WEBPACK_IMPORTED_MODULE_3__.X.Container,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("h1",{className:"sr-only",id:"ansi",children:"Syntax Colors"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_primer_react_experimental__WEBPACK_IMPORTED_MODULE_4__.b,{"aria-labelledby":"contribution",data,columns:[{header:"Sample",field:"name",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_StorybookComponents_ColorTokenSwatch_ColorTokenSwatch__WEBPACK_IMPORTED_MODULE_2__.X,{bgColor:row.name})},{header:"Token",field:"name",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_StorybookComponents_InlineCode_InlineCode__WEBPACK_IMPORTED_MODULE_5__.R,{value:row.name,copyClipboard:!0,cssVar:!0})},{header:"Output value",field:"value",rowHeader:!0,renderCell:row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("p",{children:row.value})}]})]})};Syntax.displayName="Syntax",Avatar.parameters={...Avatar.parameters,docs:{...Avatar.parameters?.docs,source:{originalSource:"() => {\n  const data = getTokensByName(colorTokens, 'avatar').map(token => {\n    return {\n      id: token.name,\n      ...token\n    };\n  });\n  return <Table.Container>\n      <h1 className=\"sr-only\" id=\"table-heading\">\n        Avatar\n      </h1>\n      <DataTable aria-labelledby=\"pattern\" data={data} columns={[{\n      header: 'Sample',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <ColorTokenSwatch bgColor={row.name.includes('bgColor') || row.name.includes('iconColor') ? row.name : undefined} textColor={row.name.includes('fgColor') ? row.name : undefined} shadowColor={row.name.includes('shadow') ? row.name : undefined} borderColor={row.name.includes('borderColor') ? row.name : undefined} />;\n      }\n    }, {\n      header: 'Token',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <InlineCode value={row.name} copyClipboard cssVar />;\n      }\n    }, {\n      header: 'Output value',\n      field: 'value',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.value}</p>;\n      }\n    }]} />\n    </Table.Container>;\n}",...Avatar.parameters?.docs?.source}}},Control.parameters={...Control.parameters,docs:{...Control.parameters?.docs,source:{originalSource:"() => {\n  const control = getTokensByName(colorTokens, 'control').map(token => {\n    return {\n      id: token.name,\n      ...token\n    };\n  });\n  const controlKnob = getTokensByName(colorTokens, 'controlKnob').map(token => {\n    return {\n      id: token.name,\n      ...token\n    };\n  });\n  const controlTrack = getTokensByName(colorTokens, 'controlTrack').map(token => {\n    return {\n      id: token.name,\n      ...token\n    };\n  });\n  const data = control.concat(controlKnob, controlTrack).map((item, index) => ({\n    ...item,\n    index\n  }));\n  return <Table.Container>\n      <h1 className=\"sr-only\" id=\"table-heading\">\n        Control\n      </h1>\n      <DataTable aria-labelledby=\"pattern\" data={data} columns={[{\n      header: 'Sample',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <ColorTokenSwatch bgColor={row.name.includes('bgColor') || row.name.includes('iconColor') ? row.name : undefined} textColor={row.name.includes('fgColor') ? row.name : undefined} shadowColor={row.name.includes('shadow') ? row.name : undefined} borderColor={row.name.includes('borderColor') ? row.name : undefined} />;\n      }\n    }, {\n      header: 'Token',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <InlineCode value={row.name} copyClipboard cssVar />;\n      }\n    }, {\n      header: 'Output value',\n      field: 'value',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.value}</p>;\n      }\n    }]} />\n    </Table.Container>;\n}",...Control.parameters?.docs?.source}}},Counter.parameters={...Counter.parameters,docs:{...Counter.parameters?.docs,source:{originalSource:"() => {\n  const data = getTokensByName(colorTokens, 'counter').map(token => {\n    return {\n      id: token.name,\n      ...token\n    };\n  });\n  return <Table.Container>\n      <h1 className=\"sr-only\" id=\"table-heading\">\n        Counter\n      </h1>\n      <DataTable aria-labelledby=\"pattern\" data={data} columns={[{\n      header: 'Sample',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <ColorTokenSwatch bgColor={row.name.includes('bgColor') || row.name.includes('iconColor') ? row.name : undefined} textColor={row.name.includes('fgColor') ? row.name : undefined} shadowColor={row.name.includes('shadow') ? row.name : undefined} borderColor={row.name.includes('borderColor') ? row.name : undefined} />;\n      }\n    }, {\n      header: 'Token',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <InlineCode value={row.name} copyClipboard cssVar />;\n      }\n    }, {\n      header: 'Output value',\n      field: 'value',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.value}</p>;\n      }\n    }]} />\n    </Table.Container>;\n}",...Counter.parameters?.docs?.source}}},Button.parameters={...Button.parameters,docs:{...Button.parameters?.docs,source:{originalSource:"() => {\n  const button = getTokensByName(colorTokens, 'button').map(token => {\n    return {\n      id: token.name,\n      ...token\n    };\n  });\n  const buttonCounter = getTokensByName(colorTokens, 'buttonCounter').map(token => {\n    return {\n      id: token.name,\n      ...token\n    };\n  });\n  const data = button.concat(buttonCounter).map((item, index) => ({\n    ...item,\n    index\n  }));\n  return <Table.Container>\n      <h1 className=\"sr-only\" id=\"table-heading\">\n        Button\n      </h1>\n      <DataTable aria-labelledby=\"pattern\" data={data} columns={[{\n      header: 'Sample',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <ColorTokenSwatch bgColor={row.name.includes('bgColor') || row.name.includes('iconColor') ? row.name : undefined} textColor={row.name.includes('fgColor') ? row.name : undefined} shadowColor={row.name.includes('shadow') ? row.name : undefined} borderColor={row.name.includes('borderColor') ? row.name : undefined} />;\n      }\n    }, {\n      header: 'Token',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <InlineCode value={row.name} copyClipboard cssVar />;\n      }\n    }, {\n      header: 'Output value',\n      field: 'value',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.value}</p>;\n      }\n    }]} />\n    </Table.Container>;\n}",...Button.parameters?.docs?.source}}},Focus.parameters={...Focus.parameters,docs:{...Focus.parameters?.docs,source:{originalSource:"() => {\n  const data = getTokensByName(colorTokens, 'focus-outlineColor').map(token => {\n    return {\n      id: token.name,\n      ...token\n    };\n  });\n  return <Table.Container>\n      <h1 className=\"sr-only\" id=\"table-heading\">\n        Focus\n      </h1>\n      <DataTable aria-labelledby=\"pattern\" data={data} columns={[{\n      header: 'Sample',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <ColorTokenSwatch outlineColor={row.name.includes('outlineColor') ? row.name : undefined} />;\n      }\n    }, {\n      header: 'Token',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <InlineCode value={row.name} copyClipboard cssVar />;\n      }\n    }, {\n      header: 'Output value',\n      field: 'value',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.value}</p>;\n      }\n    }]} />\n    </Table.Container>;\n}",...Focus.parameters?.docs?.source}}},Header.parameters={...Header.parameters,docs:{...Header.parameters?.docs,source:{originalSource:"() => {\n  const data = getTokensByName(colorTokens, 'header').map(token => {\n    return {\n      id: token.name,\n      ...token\n    };\n  });\n  return <Table.Container>\n      <h1 className=\"sr-only\" id=\"table-heading\">\n        Header\n      </h1>\n      <DataTable aria-labelledby=\"pattern\" data={data} columns={[{\n      header: 'Sample',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <ColorTokenSwatch bgColor={row.name.includes('bgColor') || row.name.includes('iconColor') ? row.name : undefined} textColor={row.name.includes('fgColor') ? row.name : undefined} shadowColor={row.name.includes('shadow') ? row.name : undefined} borderColor={row.name.includes('borderColor') ? row.name : undefined} />;\n      }\n    }, {\n      header: 'Token',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <InlineCode value={row.name} copyClipboard cssVar />;\n      }\n    }, {\n      header: 'Output value',\n      field: 'value',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.value}</p>;\n      }\n    }]} />\n    </Table.Container>;\n}",...Header.parameters?.docs?.source}}},Menu.parameters={...Menu.parameters,docs:{...Menu.parameters?.docs,source:{originalSource:"() => {\n  const data = getTokensByName(colorTokens, 'menu').map(token => {\n    return {\n      id: token.name,\n      ...token\n    };\n  });\n  return <Table.Container>\n      <h1 className=\"sr-only\" id=\"table-heading\">\n        Menu\n      </h1>\n      <DataTable aria-labelledby=\"pattern\" data={data} columns={[{\n      header: 'Sample',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <ColorTokenSwatch bgColor={row.name.includes('bgColor') || row.name.includes('iconColor') ? row.name : undefined} textColor={row.name.includes('fgColor') ? row.name : undefined} shadowColor={row.name.includes('shadow') ? row.name : undefined} borderColor={row.name.includes('borderColor') ? row.name : undefined} />;\n      }\n    }, {\n      header: 'Token',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <InlineCode value={row.name} copyClipboard cssVar />;\n      }\n    }, {\n      header: 'Output value',\n      field: 'value',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.value}</p>;\n      }\n    }]} />\n    </Table.Container>;\n}",...Menu.parameters?.docs?.source}}},Overlay.parameters={...Overlay.parameters,docs:{...Overlay.parameters?.docs,source:{originalSource:"() => {\n  const data = getTokensByName(colorTokens, 'overlay').map(token => {\n    return {\n      id: token.name,\n      ...token\n    };\n  });\n  return <Table.Container>\n      <h1 className=\"sr-only\" id=\"table-heading\">\n        Overlay\n      </h1>\n      <DataTable aria-labelledby=\"pattern\" data={data} columns={[{\n      header: 'Sample',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <ColorTokenSwatch bgColor={row.name.includes('bgColor') || row.name.includes('iconColor') ? row.name : undefined} textColor={row.name.includes('fgColor') ? row.name : undefined} shadowColor={row.name.includes('shadow') ? row.name : undefined} borderColor={row.name.includes('borderColor') ? row.name : undefined} />;\n      }\n    }, {\n      header: 'Token',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <InlineCode value={row.name} copyClipboard cssVar />;\n      }\n    }, {\n      header: 'Output value',\n      field: 'value',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.value}</p>;\n      }\n    }]} />\n    </Table.Container>;\n}",...Overlay.parameters?.docs?.source}}},SelectMenu.parameters={...SelectMenu.parameters,docs:{...SelectMenu.parameters?.docs,source:{originalSource:"() => {\n  const data = getTokensByName(colorTokens, 'selectMenu').map(token => {\n    return {\n      id: token.name,\n      ...token\n    };\n  });\n  return <Table.Container>\n      <h1 className=\"sr-only\" id=\"table-heading\">\n        SelectMenu\n      </h1>\n      <DataTable aria-labelledby=\"pattern\" data={data} columns={[{\n      header: 'Sample',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <ColorTokenSwatch bgColor={row.name.includes('bgColor') || row.name.includes('iconColor') ? row.name : undefined} textColor={row.name.includes('fgColor') ? row.name : undefined} shadowColor={row.name.includes('shadow') ? row.name : undefined} borderColor={row.name.includes('borderColor') ? row.name : undefined} />;\n      }\n    }, {\n      header: 'Token',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <InlineCode value={row.name} copyClipboard cssVar />;\n      }\n    }, {\n      header: 'Output value',\n      field: 'value',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.value}</p>;\n      }\n    }]} />\n    </Table.Container>;\n}",...SelectMenu.parameters?.docs?.source}}},SideNav.parameters={...SideNav.parameters,docs:{...SideNav.parameters?.docs,source:{originalSource:"() => {\n  const data = getTokensByName(colorTokens, 'sideNav').map(token => {\n    return {\n      id: token.name,\n      ...token\n    };\n  });\n  return <Table.Container>\n      <h1 className=\"sr-only\" id=\"table-heading\">\n        SideNav\n      </h1>\n      <DataTable aria-labelledby=\"pattern\" data={data} columns={[{\n      header: 'Sample',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <ColorTokenSwatch bgColor={row.name.includes('bgColor') || row.name.includes('iconColor') ? row.name : undefined} textColor={row.name.includes('fgColor') ? row.name : undefined} shadowColor={row.name.includes('shadow') ? row.name : undefined} borderColor={row.name.includes('borderColor') ? row.name : undefined} />;\n      }\n    }, {\n      header: 'Token',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <InlineCode value={row.name} copyClipboard cssVar />;\n      }\n    }, {\n      header: 'Output value',\n      field: 'value',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.value}</p>;\n      }\n    }]} />\n    </Table.Container>;\n}",...SideNav.parameters?.docs?.source}}},TimelineBadge.parameters={...TimelineBadge.parameters,docs:{...TimelineBadge.parameters?.docs,source:{originalSource:"() => {\n  const data = getTokensByName(colorTokens, 'timelineBadge').map(token => {\n    return {\n      id: token.name,\n      ...token\n    };\n  });\n  return <Table.Container>\n      <h1 className=\"sr-only\" id=\"table-heading\">\n        TimelineBadge\n      </h1>\n      <DataTable aria-labelledby=\"pattern\" data={data} columns={[{\n      header: 'Sample',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <ColorTokenSwatch bgColor={row.name.includes('bgColor') || row.name.includes('iconColor') ? row.name : undefined} textColor={row.name.includes('fgColor') ? row.name : undefined} shadowColor={row.name.includes('shadow') ? row.name : undefined} borderColor={row.name.includes('borderColor') ? row.name : undefined} />;\n      }\n    }, {\n      header: 'Token',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <InlineCode value={row.name} copyClipboard cssVar />;\n      }\n    }, {\n      header: 'Output value',\n      field: 'value',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.value}</p>;\n      }\n    }]} />\n    </Table.Container>;\n}",...TimelineBadge.parameters?.docs?.source}}},UnderlineNav.parameters={...UnderlineNav.parameters,docs:{...UnderlineNav.parameters?.docs,source:{originalSource:"() => {\n  const data = getTokensByName(colorTokens, 'underlineNav').map(token => {\n    return {\n      id: token.name,\n      ...token\n    };\n  });\n  return <Table.Container>\n      <h1 className=\"sr-only\" id=\"table-heading\">\n        UnderlineNav\n      </h1>\n      <DataTable aria-labelledby=\"table-heading\" data={data} columns={[{\n      header: 'Sample',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <ColorTokenSwatch bgColor={row.name.includes('bgColor') || row.name.includes('iconColor') ? row.name : undefined} textColor={row.name.includes('fgColor') ? row.name : undefined} shadowColor={row.name.includes('shadow') ? row.name : undefined} borderColor={row.name.includes('borderColor') ? row.name : undefined} />;\n      }\n    }, {\n      header: 'Token',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <InlineCode value={row.name} copyClipboard cssVar />;\n      }\n    }, {\n      header: 'Output value',\n      field: 'value',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.value}</p>;\n      }\n    }]} />\n    </Table.Container>;\n}",...UnderlineNav.parameters?.docs?.source}}},Selection.parameters={...Selection.parameters,docs:{...Selection.parameters?.docs,source:{originalSource:"() => {\n  const data = getTokensByName(colorTokens, 'selection').map(token => {\n    return {\n      id: token.name,\n      ...token\n    };\n  });\n  return <Table.Container>\n      <h1 className=\"sr-only\" id=\"selection\">\n        Text selection\n      </h1>\n      <DataTable aria-labelledby=\"selection\" data={data} columns={[{\n      header: 'Sample',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <ColorTokenSwatch selectionColor={row.name.includes('bgColor') || row.name.includes('iconColor') ? row.name : undefined} />;\n      }\n    }, {\n      header: 'Token',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <InlineCode value={row.name} copyClipboard cssVar />;\n      }\n    }, {\n      header: 'Output value',\n      field: 'value',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.value}</p>;\n      }\n    }]} />\n    </Table.Container>;\n}",...Selection.parameters?.docs?.source}}},Tooltip.parameters={...Tooltip.parameters,docs:{...Tooltip.parameters?.docs,source:{originalSource:"() => {\n  const data = getTokensByName(colorTokens, 'tooltip').map(token => {\n    return {\n      id: token.name,\n      ...token\n    };\n  });\n  return <Table.Container>\n      <h1 className=\"sr-only\" id=\"tooltip\">\n        Tooltip\n      </h1>\n      <DataTable aria-labelledby=\"tooltip\" data={data} columns={[{\n      header: 'Sample',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <ColorTokenSwatch bgColor={row.name.includes('bgColor') || row.name.includes('iconColor') ? row.name : undefined} textColor={row.name.includes('fgColor') ? row.name : undefined} shadowColor={row.name.includes('shadow') ? row.name : undefined} borderColor={row.name.includes('borderColor') ? row.name : undefined} />;\n      }\n    }, {\n      header: 'Token',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <InlineCode value={row.name} copyClipboard cssVar />;\n      }\n    }, {\n      header: 'Output value',\n      field: 'value',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.value}</p>;\n      }\n    }]} />\n    </Table.Container>;\n}",...Tooltip.parameters?.docs?.source}}},Treeview.parameters={...Treeview.parameters,docs:{...Treeview.parameters?.docs,source:{originalSource:"() => {\n  const data = getTokensByName(colorTokens, 'treeViewItem').map(token => {\n    return {\n      id: token.name,\n      ...token\n    };\n  });\n  return <Table.Container>\n      <h1 className=\"sr-only\" id=\"treeViewItem\">\n        Treeview\n      </h1>\n      <DataTable aria-labelledby=\"treeViewItem\" data={data} columns={[{\n      header: 'Sample',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <ColorTokenSwatch bgColor={row.name.includes('bgColor') || row.name.includes('iconColor') ? row.name : undefined} textColor={row.name.includes('fgColor') ? row.name : undefined} shadowColor={row.name.includes('shadow') ? row.name : undefined} borderColor={row.name.includes('borderColor') ? row.name : undefined} />;\n      }\n    }, {\n      header: 'Token',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <InlineCode value={row.name} copyClipboard cssVar />;\n      }\n    }, {\n      header: 'Output value',\n      field: 'value',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.value}</p>;\n      }\n    }]} />\n    </Table.Container>;\n}",...Treeview.parameters?.docs?.source}}},ContributionGraph.parameters={...ContributionGraph.parameters,docs:{...ContributionGraph.parameters?.docs,source:{originalSource:"() => {\n  const data = getTokensByName(colorTokens, 'contribution').map(token => {\n    return {\n      id: token.name,\n      ...token\n    };\n  });\n  return <Table.Container>\n      <h1 className=\"sr-only\" id=\"contribution\">\n        Contribution graph\n      </h1>\n      <DataTable aria-labelledby=\"contribution\" data={data} columns={[{\n      header: 'Sample',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <ColorTokenSwatch bgColor={row.name.includes('bgColor') || row.name.includes('iconColor') ? row.name : undefined} textColor={row.name.includes('fgColor') ? row.name : undefined} shadowColor={row.name.includes('shadow') ? row.name : undefined} borderColor={row.name.includes('borderColor') ? row.name : undefined} />;\n      }\n    }, {\n      header: 'Token',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <InlineCode value={row.name} copyClipboard cssVar />;\n      }\n    }, {\n      header: 'Output value',\n      field: 'value',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.value}</p>;\n      }\n    }]} />\n    </Table.Container>;\n}",...ContributionGraph.parameters?.docs?.source}}},Label.parameters={...Label.parameters,docs:{...Label.parameters?.docs,source:{originalSource:"() => {\n  const data = getTokensByName(colorTokens, 'label').map(token => {\n    return {\n      id: token.name,\n      ...token\n    };\n  });\n  const colors = [...new Set(data.map(({\n    id\n  }) => id.replace(/label-([a-zA-Z0-9]+)-.*/, '$1')))];\n  return <>\n      <h1 id=\"label\">Labels</h1>\n      <Box paddingBottom={5} sx={{\n      gap: 2,\n      display: 'flex'\n    }}>\n        {colors.map(color => <Token text={color} sx={{\n        backgroundColor: `var(--label-${color}-bgColor-rest)`,\n        color: `var(--label-${color}-fgColor-rest)`,\n        borderColor: 'transparent',\n        '&:hover': {\n          backgroundColor: `var(--label-${color}-bgColor-hover)`,\n          color: `var(--label-${color}-fgColor-hover)`,\n          cursor: 'pointer'\n        },\n        '&:active': {\n          backgroundColor: `var(--label-${color}-bgColor-active)`,\n          color: `var(--label-${color}-fgColor-active)`,\n          cursor: 'pointer'\n        }\n      }} />)}\n      </Box>\n      <Table.Container>\n        <DataTable aria-labelledby=\"label\" data={data} columns={[{\n        header: 'Sample',\n        field: 'name',\n        rowHeader: true,\n        renderCell: row => {\n          return <ColorTokenSwatch bgColor={row.name.includes('bgColor') || row.name.includes('iconColor') ? row.name : undefined} textColor={row.name.includes('fgColor') ? row.name : undefined} shadowColor={row.name.includes('shadow') ? row.name : undefined} borderColor={row.name.includes('borderColor') ? row.name : undefined} />;\n        }\n      }, {\n        header: 'Token',\n        field: 'name',\n        renderCell: row => {\n          return <InlineCode value={row.name} copyClipboard cssVar />;\n        }\n      }, {\n        header: 'Output value',\n        field: 'value',\n        rowHeader: true,\n        renderCell: row => {\n          return <p>{row.value}</p>;\n        }\n      }]} />\n      </Table.Container>\n    </>;\n}",...Label.parameters?.docs?.source}}},Syntax.parameters={...Syntax.parameters,docs:{...Syntax.parameters?.docs,source:{originalSource:"() => {\n  const data = getTokensByName(colorTokens, 'color').map(token => {\n    return {\n      id: token.name,\n      ...token\n    };\n  });\n  return <Table.Container>\n      <h1 className=\"sr-only\" id=\"ansi\">\n        Syntax Colors\n      </h1>\n      <DataTable aria-labelledby=\"contribution\" data={data} columns={[{\n      header: 'Sample',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <ColorTokenSwatch bgColor={row.name} />;\n      }\n    }, {\n      header: 'Token',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <InlineCode value={row.name} copyClipboard cssVar />;\n      }\n    }, {\n      header: 'Output value',\n      field: 'value',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.value}</p>;\n      }\n    }]} />\n    </Table.Container>;\n}",...Syntax.parameters?.docs?.source}}};const __namedExportsOrder=["Avatar","Control","Counter","Button","Focus","Header","Menu","Overlay","SelectMenu","SideNav","TimelineBadge","UnderlineNav","Selection","Tooltip","Treeview","ContributionGraph","Label","Syntax"]},"./stories/StorybookComponents/InlineCode/InlineCode.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{R:()=>InlineCode_InlineCode_InlineCode});var IconButton=__webpack_require__("./node_modules/@primer/react/lib-esm/Button/IconButton.js"),index_esm=__webpack_require__("./node_modules/@primer/octicons-react/dist/index.esm.mjs"),copy_to_clipboard=__webpack_require__("./node_modules/copy-to-clipboard/index.js"),copy_to_clipboard_default=__webpack_require__.n(copy_to_clipboard),react=__webpack_require__("./node_modules/react/index.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const ClipboardCopy=({value})=>{const[copied,setCopied]=react.useState(!1);return react.useEffect(()=>{const timeout=setTimeout(()=>{copied&&setCopied(!1)},1e3);return()=>clearTimeout(timeout)},[copied]),(0,jsx_runtime.jsx)(IconButton.K,{"aria-label":"Copy to clipboard",size:"small",variant:"invisible",onClick:()=>{copy_to_clipboard_default()(value),setCopied(!0)},icon:copied?index_esm.Srz:index_esm.TdU})};ClipboardCopy.displayName="ClipboardCopy";ClipboardCopy.displayName="ClipboardCopy";try{ClipboardCopy.displayName="ClipboardCopy",ClipboardCopy.__docgenInfo={description:"",displayName:"ClipboardCopy",props:{value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/StorybookComponents/ClipboardCopy/ClipboardCopy.tsx#ClipboardCopy"]={docgenInfo:ClipboardCopy.__docgenInfo,name:"ClipboardCopy",path:"stories/StorybookComponents/ClipboardCopy/ClipboardCopy.tsx#ClipboardCopy"})}catch(__react_docgen_typescript_loader_error){}var injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),InlineCode=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./stories/StorybookComponents/InlineCode/InlineCode.css"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(InlineCode.A,options);InlineCode.A&&InlineCode.A.locals&&InlineCode.A.locals;const InlineCode_InlineCode_InlineCode=({value,copyClipboard,cssVar})=>{const[copied,setCopied]=react.useState(!1);return react.useEffect(()=>{const timeout=setTimeout(()=>{copied&&setCopied(!1)},1e3);return()=>clearTimeout(timeout)},[copied]),(0,jsx_runtime.jsxs)("span",{className:"InlineCode",children:[(0,jsx_runtime.jsx)("code",{children:cssVar?`--${value}`:value})," ",copyClipboard&&(0,jsx_runtime.jsx)(ClipboardCopy,{value:cssVar?`--${value}`:value})]})};InlineCode_InlineCode_InlineCode.displayName="InlineCode";InlineCode_InlineCode_InlineCode.displayName="InlineCode";try{InlineCode_InlineCode_InlineCode.displayName="InlineCode",InlineCode_InlineCode_InlineCode.__docgenInfo={description:"",displayName:"InlineCode",props:{value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string"}},copyClipboard:{defaultValue:null,description:"",name:"copyClipboard",required:!1,type:{name:"boolean"}},cssVar:{defaultValue:null,description:"",name:"cssVar",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/StorybookComponents/InlineCode/InlineCode.tsx#InlineCode"]={docgenInfo:InlineCode_InlineCode_InlineCode.__docgenInfo,name:"InlineCode",path:"stories/StorybookComponents/InlineCode/InlineCode.tsx#InlineCode"})}catch(__react_docgen_typescript_loader_error){}},"./stories/utilities/getTokensByName.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{R:()=>getTokensByName});const getTokensByName=(tokens,name)=>{const separatorRegex=new RegExp("-$","i"),regex=new RegExp(`^${name.replace(separatorRegex,"")}(-|$)`,"i");return Object.values(tokens).filter(token=>regex.test(`${token.name}`))}}}]);