(self.webpackChunkstorybook=self.webpackChunkstorybook||[]).push([[8530],{"./node_modules/copy-to-clipboard/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var deselectCurrent=__webpack_require__("./node_modules/toggle-selection/index.js"),clipboardToIE11Formatting={"text/plain":"Text","text/html":"Url",default:"Text"};module.exports=function copy(text,options){var debug,message,reselectPrevious,range,selection,mark,success=!1;options||(options={}),debug=options.debug||!1;try{if(reselectPrevious=deselectCurrent(),range=document.createRange(),selection=document.getSelection(),(mark=document.createElement("span")).textContent=text,mark.ariaHidden="true",mark.style.all="unset",mark.style.position="fixed",mark.style.top=0,mark.style.clip="rect(0, 0, 0, 0)",mark.style.whiteSpace="pre",mark.style.webkitUserSelect="text",mark.style.MozUserSelect="text",mark.style.msUserSelect="text",mark.style.userSelect="text",mark.addEventListener("copy",function(e){if(e.stopPropagation(),options.format)if(e.preventDefault(),void 0===e.clipboardData){debug&&console.warn("unable to use e.clipboardData"),debug&&console.warn("trying IE specific stuff"),window.clipboardData.clearData();var format=clipboardToIE11Formatting[options.format]||clipboardToIE11Formatting.default;window.clipboardData.setData(format,text)}else e.clipboardData.clearData(),e.clipboardData.setData(options.format,text);options.onCopy&&(e.preventDefault(),options.onCopy(e.clipboardData))}),document.body.appendChild(mark),range.selectNodeContents(mark),selection.addRange(range),!document.execCommand("copy"))throw new Error("copy command was unsuccessful");success=!0}catch(err){debug&&console.error("unable to copy using execCommand: ",err),debug&&console.warn("trying IE specific stuff");try{window.clipboardData.setData(options.format||"text",text),options.onCopy&&options.onCopy(window.clipboardData),success=!0}catch(err){debug&&console.error("unable to copy using clipboardData: ",err),debug&&console.error("falling back to prompt"),message=function format(message){var copyKey=(/mac os x/i.test(navigator.userAgent)?"âŒ˜":"Ctrl")+"+C";return message.replace(/#{\s*key\s*}/g,copyKey)}("message"in options?options.message:"Copy to clipboard: #{key}, Enter"),window.prompt(message,text)}}finally{selection&&("function"==typeof selection.removeRange?selection.removeRange(range):selection.removeAllRanges()),mark&&document.body.removeChild(mark),reselectPrevious()}return success}},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./stories/StorybookComponents/InlineCode/InlineCode.css":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".InlineCode {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: var(--base-size-4);\n  white-space: nowrap;\n}\n","",{version:3,sources:["webpack://./stories/StorybookComponents/InlineCode/InlineCode.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,mBAAmB;EACnB,mBAAmB;EACnB,uBAAuB;EACvB,mBAAmB;AACrB",sourcesContent:[".InlineCode {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: var(--base-size-4);\n  white-space: nowrap;\n}\n"],sourceRoot:""}]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./stories/StorybookComponents/TypographyDemo/TypographyDemo.css":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".TypographyDemo {\n  font: var(--fontShorthand);\n}\n\n.TypographyDemo-container {\n  padding: var(--stack-padding-normal);\n  border: solid var(--borderWidth-thin) var(--borderColor-default);\n  border-radius: var(--borderRadius-medium);\n  margin-block-end: var(--stack-gap-condensed);\n  grid-column: 1/ -1;\n}\n","",{version:3,sources:["webpack://./stories/StorybookComponents/TypographyDemo/TypographyDemo.css"],names:[],mappings:"AAAA;EACE,0BAA0B;AAC5B;;AAEA;EACE,oCAAoC;EACpC,gEAAgE;EAChE,yCAAyC;EACzC,4CAA4C;EAC5C,kBAAkB;AACpB",sourcesContent:[".TypographyDemo {\n  font: var(--fontShorthand);\n}\n\n.TypographyDemo-container {\n  padding: var(--stack-padding-normal);\n  border: solid var(--borderWidth-thin) var(--borderColor-default);\n  border-radius: var(--borderRadius-medium);\n  margin-block-end: var(--stack-gap-condensed);\n  grid-column: 1/ -1;\n}\n"],sourceRoot:""}]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/toggle-selection/index.js":module=>{module.exports=function(){var selection=document.getSelection();if(!selection.rangeCount)return function(){};for(var active=document.activeElement,ranges=[],i=0;i<selection.rangeCount;i++)ranges.push(selection.getRangeAt(i));switch(active.tagName.toUpperCase()){case"INPUT":case"TEXTAREA":active.blur();break;default:active=null}return selection.removeAllRanges(),function(){"Caret"===selection.type&&selection.removeAllRanges(),selection.rangeCount||ranges.forEach(function(range){selection.addRange(range)}),active&&active.focus()}}},"./stories/StorybookComponents/InlineCode/InlineCode.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{R:()=>InlineCode_InlineCode_InlineCode});var IconButton=__webpack_require__("./node_modules/@primer/react/lib-esm/Button/IconButton.js"),index_esm=__webpack_require__("./node_modules/@primer/octicons-react/dist/index.esm.mjs"),copy_to_clipboard=__webpack_require__("./node_modules/copy-to-clipboard/index.js"),copy_to_clipboard_default=__webpack_require__.n(copy_to_clipboard),react=__webpack_require__("./node_modules/react/index.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const ClipboardCopy=({value})=>{const[copied,setCopied]=react.useState(!1);return react.useEffect(()=>{const timeout=setTimeout(()=>{copied&&setCopied(!1)},1e3);return()=>clearTimeout(timeout)},[copied]),(0,jsx_runtime.jsx)(IconButton.K,{"aria-label":"Copy to clipboard",size:"small",variant:"invisible",onClick:()=>{copy_to_clipboard_default()(value),setCopied(!0)},icon:copied?index_esm.Srz:index_esm.TdU})};ClipboardCopy.displayName="ClipboardCopy";ClipboardCopy.displayName="ClipboardCopy";try{ClipboardCopy.displayName="ClipboardCopy",ClipboardCopy.__docgenInfo={description:"",displayName:"ClipboardCopy",props:{value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/StorybookComponents/ClipboardCopy/ClipboardCopy.tsx#ClipboardCopy"]={docgenInfo:ClipboardCopy.__docgenInfo,name:"ClipboardCopy",path:"stories/StorybookComponents/ClipboardCopy/ClipboardCopy.tsx#ClipboardCopy"})}catch(__react_docgen_typescript_loader_error){}var injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),InlineCode=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./stories/StorybookComponents/InlineCode/InlineCode.css"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(InlineCode.A,options);InlineCode.A&&InlineCode.A.locals&&InlineCode.A.locals;const InlineCode_InlineCode_InlineCode=({value,copyClipboard,cssVar})=>{const[copied,setCopied]=react.useState(!1);return react.useEffect(()=>{const timeout=setTimeout(()=>{copied&&setCopied(!1)},1e3);return()=>clearTimeout(timeout)},[copied]),(0,jsx_runtime.jsxs)("span",{className:"InlineCode",children:[(0,jsx_runtime.jsx)("code",{children:cssVar?`--${value}`:value})," ",copyClipboard&&(0,jsx_runtime.jsx)(ClipboardCopy,{value:cssVar?`--${value}`:value})]})};InlineCode_InlineCode_InlineCode.displayName="InlineCode";InlineCode_InlineCode_InlineCode.displayName="InlineCode";try{InlineCode_InlineCode_InlineCode.displayName="InlineCode",InlineCode_InlineCode_InlineCode.__docgenInfo={description:"",displayName:"InlineCode",props:{value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string"}},copyClipboard:{defaultValue:null,description:"",name:"copyClipboard",required:!1,type:{name:"boolean"}},cssVar:{defaultValue:null,description:"",name:"cssVar",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/StorybookComponents/InlineCode/InlineCode.tsx#InlineCode"]={docgenInfo:InlineCode_InlineCode_InlineCode.__docgenInfo,name:"InlineCode",path:"stories/StorybookComponents/InlineCode/InlineCode.tsx#InlineCode"})}catch(__react_docgen_typescript_loader_error){}},"./stories/StorybookComponents/TypographyDemo/TypographyDemo.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{x:()=>TypographyDemo_TypographyDemo_TypographyDemo});__webpack_require__("./node_modules/react/index.js");var injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),TypographyDemo=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./stories/StorybookComponents/TypographyDemo/TypographyDemo.css"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(TypographyDemo.A,options);TypographyDemo.A&&TypographyDemo.A.locals&&TypographyDemo.A.locals;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const TypographyDemo_TypographyDemo_TypographyDemo=({fontSize,fontWeight,lineHeight,lineBoxHeight,fontFamily,fontShorthand,children,id,container})=>container?(0,jsx_runtime.jsx)("div",{className:"TypographyDemo-container",children:(0,jsx_runtime.jsx)("p",{className:"TypographyDemo",id,style:{"--fontShorthand":`var(--${fontShorthand})`,margin:"0",fontSize:fontSize?`var(--${fontSize})`:void 0,fontWeight:fontWeight?`var(--${fontWeight})`:void 0,lineHeight:lineHeight?`var(--${lineHeight})`:void 0,height:lineBoxHeight?`var(--${lineBoxHeight})`:void 0,fontFamily:fontFamily?`var(--${fontFamily})`:void 0},children})}):(0,jsx_runtime.jsx)("p",{className:"TypographyDemo",id,style:{"--fontShorthand":`var(--${fontShorthand})`,margin:"0",fontSize:fontSize?`var(--${fontSize})`:void 0,fontWeight:fontWeight?`var(--${fontWeight})`:void 0,lineHeight:lineHeight?`var(--${lineHeight})`:void 0,height:lineBoxHeight?`var(--${lineBoxHeight})`:void 0,fontFamily:fontFamily?`var(--${fontFamily})`:void 0},children});TypographyDemo_TypographyDemo_TypographyDemo.displayName="TypographyDemo";try{TypographyDemo_TypographyDemo_TypographyDemo.displayName="TypographyDemo",TypographyDemo_TypographyDemo_TypographyDemo.__docgenInfo={description:"",displayName:"TypographyDemo",props:{fontSize:{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"string"}},fontWeight:{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"string"}},lineHeight:{defaultValue:null,description:"",name:"lineHeight",required:!1,type:{name:"string"}},lineBoxHeight:{defaultValue:null,description:"",name:"lineBoxHeight",required:!1,type:{name:"string"}},fontFamily:{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string"}},fontShorthand:{defaultValue:null,description:"",name:"fontShorthand",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},container:{defaultValue:null,description:"",name:"container",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/StorybookComponents/TypographyDemo/TypographyDemo.tsx#TypographyDemo"]={docgenInfo:TypographyDemo_TypographyDemo_TypographyDemo.__docgenInfo,name:"TypographyDemo",path:"stories/StorybookComponents/TypographyDemo/TypographyDemo.tsx#TypographyDemo"})}catch(__react_docgen_typescript_loader_error){}},"./stories/Typography/Functional.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BodyLarge:()=>BodyLarge,BodyMedium:()=>BodyMedium,BodySmall:()=>BodySmall,Caption:()=>Caption,CodeBlock:()=>CodeBlock,Display:()=>Display,FontFamily:()=>FontFamily,FontShorthand:()=>FontShorthand,InlineCodeBlock:()=>InlineCodeBlock,Overview:()=>Overview,Subtitle:()=>Subtitle,TitleLarge:()=>TitleLarge,TitleMedium:()=>TitleMedium,TitleSmall:()=>TitleSmall,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Functional_stories});__webpack_require__("./node_modules/react/index.js");const typography_namespaceObject=JSON.parse('{"fontStack-monospace":{"key":"{fontStack.monospace}","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontFamily"]}},"filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":"ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace","$type":"fontFamily","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontFamily"]}},"key":"{fontStack.monospace}"},"name":"fontStack-monospace","attributes":{},"path":["fontStack","monospace"],"value":"ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace","type":"fontFamily"},"fontStack-sansSerif":{"key":"{fontStack.sansSerif}","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontFamily"]}},"filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":"-apple-system, BlinkMacSystemFont, \'Segoe UI\', \'Noto Sans\', Helvetica, Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\'","$type":"fontFamily","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontFamily"]}},"key":"{fontStack.sansSerif}"},"name":"fontStack-sansSerif","attributes":{},"path":["fontStack","sansSerif"],"value":"-apple-system, BlinkMacSystemFont, \'Segoe UI\', \'Noto Sans\', Helvetica, Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\'","type":"fontFamily"},"fontStack-sansSerifDisplay":{"key":"{fontStack.sansSerifDisplay}","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontFamily"]}},"filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":"-apple-system, BlinkMacSystemFont, \'Segoe UI\', \'Noto Sans\', Helvetica, Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\'","$type":"fontFamily","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontFamily"]}},"key":"{fontStack.sansSerifDisplay}"},"name":"fontStack-sansSerifDisplay","attributes":{},"path":["fontStack","sansSerifDisplay"],"value":"-apple-system, BlinkMacSystemFont, \'Segoe UI\', \'Noto Sans\', Helvetica, Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\'","type":"fontFamily"},"fontStack-system":{"key":"{fontStack.system}","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontFamily"]}},"filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":"-apple-system, BlinkMacSystemFont, \'Segoe UI\', \'Noto Sans\', Helvetica, Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\'","$type":"fontFamily","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontFamily"]}},"key":"{fontStack.system}"},"name":"fontStack-system","attributes":{},"path":["fontStack","system"],"value":"-apple-system, BlinkMacSystemFont, \'Segoe UI\', \'Noto Sans\', Helvetica, Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\'","type":"fontFamily"},"text-body-lineHeight-large":{"key":"{text.body.lineHeight.large}","$extensions":{"org.primer.data":{"fontSize":16},"org.primer.figma":{"collection":"typography","scopes":["lineHeight"]}},"filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":1.5,"$type":"number","$extensions":{"org.primer.data":{"fontSize":16},"org.primer.figma":{"collection":"typography","scopes":["lineHeight"]}},"key":"{text.body.lineHeight.large}"},"name":"text-body-lineHeight-large","attributes":{},"path":["text","body","lineHeight","large"],"value":1.5,"type":"number"},"text-body-lineHeight-medium":{"key":"{text.body.lineHeight.medium}","$extensions":{"org.primer.data":{"fontSize":14},"org.primer.figma":{"collection":"typography","scopes":["lineHeight"]}},"filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":1.4285,"$type":"number","$extensions":{"org.primer.data":{"fontSize":14},"org.primer.figma":{"collection":"typography","scopes":["lineHeight"]}},"key":"{text.body.lineHeight.medium}"},"name":"text-body-lineHeight-medium","attributes":{},"path":["text","body","lineHeight","medium"],"value":1.4285,"type":"number"},"text-body-lineHeight-small":{"key":"{text.body.lineHeight.small}","$extensions":{"org.primer.data":{"fontSize":12},"org.primer.figma":{"collection":"typography","scopes":["lineHeight"]}},"filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":1.6666,"$type":"number","$extensions":{"org.primer.data":{"fontSize":12},"org.primer.figma":{"collection":"typography","scopes":["lineHeight"]}},"key":"{text.body.lineHeight.small}"},"name":"text-body-lineHeight-small","attributes":{},"path":["text","body","lineHeight","small"],"value":1.6666,"type":"number"},"text-body-shorthand-large":{"key":"{text.body.shorthand.large}","filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":{"fontWeight":"{text.body.weight}","fontSize":"{text.body.size.large}","lineHeight":"{text.body.lineHeight.large}","fontFamily":"{fontStack.sansSerif}"},"$type":"typography","$description":"User-generated content, markdown rendering.","key":"{text.body.shorthand.large}"},"name":"text-body-shorthand-large","attributes":{},"path":["text","body","shorthand","large"],"value":"400 1rem/1.5 -apple-system, BlinkMacSystemFont, \'Segoe UI\', \'Noto Sans\', Helvetica, Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\'","type":"typography","description":"User-generated content, markdown rendering."},"text-body-shorthand-medium":{"key":"{text.body.shorthand.medium}","filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":{"fontWeight":"{text.body.weight}","fontSize":"{text.body.size.medium}","lineHeight":"{text.body.lineHeight.medium}","fontFamily":"{fontStack.sansSerif}"},"$type":"typography","$description":"Default UI font. Most commonly used for body text.","key":"{text.body.shorthand.medium}"},"name":"text-body-shorthand-medium","attributes":{},"path":["text","body","shorthand","medium"],"value":"400 0.875rem/1.4285 -apple-system, BlinkMacSystemFont, \'Segoe UI\', \'Noto Sans\', Helvetica, Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\'","type":"typography","description":"Default UI font. Most commonly used for body text."},"text-body-shorthand-small":{"key":"{text.body.shorthand.small}","filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":{"fontWeight":"{text.body.weight}","fontSize":"{text.body.size.small}","lineHeight":"{text.body.lineHeight.small}","fontFamily":"{fontStack.sansSerif}"},"$type":"typography","$description":"Small body text for discrete UI applications, such as helper, footnote text. Should be used sparingly across pages. Line-height matches Body (medium) at 20px.","key":"{text.body.shorthand.small}"},"name":"text-body-shorthand-small","attributes":{},"path":["text","body","shorthand","small"],"value":"400 0.75rem/1.6666 -apple-system, BlinkMacSystemFont, \'Segoe UI\', \'Noto Sans\', Helvetica, Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\'","type":"typography","description":"Small body text for discrete UI applications, such as helper, footnote text. Should be used sparingly across pages. Line-height matches Body (medium) at 20px."},"text-body-size-large":{"key":"{text.body.size.large}","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontSize"]}},"filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":"16px","$type":"dimension","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontSize"]}},"key":"{text.body.size.large}"},"name":"text-body-size-large","attributes":{},"path":["text","body","size","large"],"value":"1rem","type":"dimension"},"text-body-size-medium":{"key":"{text.body.size.medium}","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontSize"]}},"filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":"14px","$type":"dimension","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontSize"]}},"key":"{text.body.size.medium}"},"name":"text-body-size-medium","attributes":{},"path":["text","body","size","medium"],"value":"0.875rem","type":"dimension"},"text-body-size-small":{"key":"{text.body.size.small}","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontSize"]}},"filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":"12px","$type":"dimension","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontSize"]}},"key":"{text.body.size.small}"},"name":"text-body-size-small","attributes":{},"path":["text","body","size","small"],"value":"0.75rem","type":"dimension"},"text-body-weight":{"key":"{text.body.weight}","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontWeight"]}},"filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":"{base.text.weight.normal}","$type":"fontWeight","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontWeight"]}},"key":"{text.body.weight}"},"name":"text-body-weight","attributes":{},"path":["text","body","weight"],"value":400,"type":"fontWeight"},"text-caption-lineHeight":{"key":"{text.caption.lineHeight}","$extensions":{"org.primer.data":{"fontSize":12},"org.primer.figma":{"collection":"typography","scopes":["lineHeight"]}},"filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":1.3333,"$type":"number","$extensions":{"org.primer.data":{"fontSize":12},"org.primer.figma":{"collection":"typography","scopes":["lineHeight"]}},"key":"{text.caption.lineHeight}"},"name":"text-caption-lineHeight","attributes":{},"path":["text","caption","lineHeight"],"value":1.3333,"type":"number"},"text-caption-shorthand":{"key":"{text.caption.shorthand}","filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":{"fontWeight":"{text.caption.weight}","fontSize":"{text.caption.size}","lineHeight":"{text.caption.lineHeight}","fontFamily":"{fontStack.sansSerif}"},"$type":"typography","$description":"Compact small font with a smaller line height of 16px. Use it for single-line scenarios, as the small sizing doesnâ€™t pass accessibility requirements.","key":"{text.caption.shorthand}"},"name":"text-caption-shorthand","attributes":{},"path":["text","caption","shorthand"],"value":"400 0.75rem/1.3333 -apple-system, BlinkMacSystemFont, \'Segoe UI\', \'Noto Sans\', Helvetica, Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\'","type":"typography","description":"Compact small font with a smaller line height of 16px. Use it for single-line scenarios, as the small sizing doesnâ€™t pass accessibility requirements."},"text-caption-size":{"key":"{text.caption.size}","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontSize"]}},"filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":"12px","$type":"dimension","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontSize"]}},"key":"{text.caption.size}"},"name":"text-caption-size","attributes":{},"path":["text","caption","size"],"value":"0.75rem","type":"dimension"},"text-caption-weight":{"key":"{text.caption.weight}","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontWeight"]}},"filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":"{base.text.weight.normal}","$type":"fontWeight","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontWeight"]}},"key":"{text.caption.weight}"},"name":"text-caption-weight","attributes":{},"path":["text","caption","weight"],"value":400,"type":"fontWeight"},"text-codeBlock-lineHeight":{"key":"{text.codeBlock.lineHeight}","$extensions":{"org.primer.data":{"fontSize":13},"org.primer.figma":{"collection":"typography","scopes":["lineHeight"]}},"filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":1.5385,"$type":"number","$extensions":{"org.primer.data":{"fontSize":13},"org.primer.figma":{"collection":"typography","scopes":["lineHeight"]}},"key":"{text.codeBlock.lineHeight}"},"name":"text-codeBlock-lineHeight","attributes":{},"path":["text","codeBlock","lineHeight"],"value":1.5385,"type":"number"},"text-codeBlock-shorthand":{"key":"{text.codeBlock.shorthand}","filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":{"fontWeight":"{text.codeBlock.weight}","fontSize":"{text.codeBlock.size}","lineHeight":"{text.codeBlock.lineHeight}","fontFamily":"{fontStack.monospace}"},"$type":"typography","$description":"Default style for rendering code blocks.","key":"{text.codeBlock.shorthand}"},"name":"text-codeBlock-shorthand","attributes":{},"path":["text","codeBlock","shorthand"],"value":"400 0.8125rem/1.5385 ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace","type":"typography","description":"Default style for rendering code blocks."},"text-codeBlock-size":{"key":"{text.codeBlock.size}","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontSize"]}},"filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":"13px","$type":"dimension","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontSize"]}},"key":"{text.codeBlock.size}"},"name":"text-codeBlock-size","attributes":{},"path":["text","codeBlock","size"],"value":"0.8125rem","type":"dimension"},"text-codeBlock-weight":{"key":"{text.codeBlock.weight}","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontWeight"]}},"filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":"{base.text.weight.normal}","$type":"fontWeight","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontWeight"]}},"key":"{text.codeBlock.weight}"},"name":"text-codeBlock-weight","attributes":{},"path":["text","codeBlock","weight"],"value":400,"type":"fontWeight"},"text-codeInline-shorthand":{"key":"{text.codeInline.shorthand}","filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":{"fontWeight":"{text.codeInline.weight}","fontSize":"{text.codeInline.size}","fontFamily":"{fontStack.monospace}"},"$type":"typography","$description":"Inline code blocks using em units to inherit size from its parent.","key":"{text.codeInline.shorthand}"},"name":"text-codeInline-shorthand","attributes":{},"path":["text","codeInline","shorthand"],"value":"400 0.9285em ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace","type":"typography","description":"Inline code blocks using em units to inherit size from its parent."},"text-codeInline-size":{"key":"{text.codeInline.size}","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontSize"]}},"filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":"0.9285em","$type":"dimension","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontSize"]}},"key":"{text.codeInline.size}"},"name":"text-codeInline-size","attributes":{},"path":["text","codeInline","size"],"value":"0.9285em","type":"dimension"},"text-codeInline-weight":{"key":"{text.codeInline.weight}","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontWeight"]}},"filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":"{base.text.weight.normal}","$type":"fontWeight","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontWeight"]}},"key":"{text.codeInline.weight}"},"name":"text-codeInline-weight","attributes":{},"path":["text","codeInline","weight"],"value":400,"type":"fontWeight"},"text-display-lineBoxHeight":{"key":"{text.display.lineBoxHeight}","$extensions":{"org.primer.data":{"fontSize":40},"org.primer.figma":{"collection":"typography","scopes":["lineHeight"],"fontSizeInPx":40}},"filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":1.4,"$type":"number","$extensions":{"org.primer.data":{"fontSize":40},"org.primer.figma":{"collection":"typography","scopes":["lineHeight"],"fontSizeInPx":40}},"key":"{text.display.lineBoxHeight}"},"name":"text-display-lineBoxHeight","attributes":{},"path":["text","display","lineBoxHeight"],"value":1.4,"type":"number"},"text-display-lineHeight":{"key":"{text.display.lineHeight}","$extensions":{"org.primer.data":{"fontSize":40},"org.primer.figma":{"collection":"typography","scopes":["lineHeight"]}},"filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":1.4,"$type":"number","$extensions":{"org.primer.data":{"fontSize":40},"org.primer.figma":{"collection":"typography","scopes":["lineHeight"]}},"key":"{text.display.lineHeight}"},"name":"text-display-lineHeight","attributes":{},"path":["text","display","lineHeight"],"value":1.4,"type":"number"},"text-display-shorthand":{"key":"{text.display.shorthand}","filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":{"fontWeight":"{text.display.weight}","fontSize":"{text.display.size}","lineHeight":"{text.display.lineHeight}","fontFamily":"{fontStack.sansSerifDisplay}"},"$type":"typography","$description":"Hero-style text for brand to product transition pages. Utilize Title (large) styles on narrow viewports.","key":"{text.display.shorthand}"},"name":"text-display-shorthand","attributes":{},"path":["text","display","shorthand"],"value":"500 2.5rem/1.4 -apple-system, BlinkMacSystemFont, \'Segoe UI\', \'Noto Sans\', Helvetica, Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\'","type":"typography","description":"Hero-style text for brand to product transition pages. Utilize Title (large) styles on narrow viewports."},"text-display-size":{"key":"{text.display.size}","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontSize"]}},"filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":"40px","$type":"dimension","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontSize"]}},"key":"{text.display.size}"},"name":"text-display-size","attributes":{},"path":["text","display","size"],"value":"2.5rem","type":"dimension"},"text-display-weight":{"key":"{text.display.weight}","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontWeight"]}},"filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":"{base.text.weight.medium}","$type":"fontWeight","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontWeight"]}},"key":"{text.display.weight}"},"name":"text-display-weight","attributes":{},"path":["text","display","weight"],"value":500,"type":"fontWeight"},"text-subtitle-lineHeight":{"key":"{text.subtitle.lineHeight}","$extensions":{"org.primer.data":{"fontSize":20},"org.primer.figma":{"collection":"typography","scopes":["lineHeight"]}},"filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":1.6,"$type":"number","$extensions":{"org.primer.data":{"fontSize":20},"org.primer.figma":{"collection":"typography","scopes":["lineHeight"]}},"key":"{text.subtitle.lineHeight}"},"name":"text-subtitle-lineHeight","attributes":{},"path":["text","subtitle","lineHeight"],"value":1.6,"type":"number"},"text-subtitle-shorthand":{"key":"{text.subtitle.shorthand}","filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":{"fontWeight":"{text.subtitle.weight}","fontSize":"{text.subtitle.size}","lineHeight":"{text.subtitle.lineHeight}","fontFamily":"{fontStack.sansSerifDisplay}"},"$type":"typography","$description":"Page sections/sub headings, or less important object names in page titles (automated action titles, for example). Same line-height as title (medium).","key":"{text.subtitle.shorthand}"},"name":"text-subtitle-shorthand","attributes":{},"path":["text","subtitle","shorthand"],"value":"400 1.25rem/1.6 -apple-system, BlinkMacSystemFont, \'Segoe UI\', \'Noto Sans\', Helvetica, Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\'","type":"typography","description":"Page sections/sub headings, or less important object names in page titles (automated action titles, for example). Same line-height as title (medium)."},"text-subtitle-size":{"key":"{text.subtitle.size}","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontSize"]}},"filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":"20px","$type":"dimension","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontSize"]}},"key":"{text.subtitle.size}"},"name":"text-subtitle-size","attributes":{},"path":["text","subtitle","size"],"value":"1.25rem","type":"dimension"},"text-subtitle-weight":{"key":"{text.subtitle.weight}","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontWeight"]}},"filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":"{base.text.weight.normal}","$type":"fontWeight","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontWeight"]}},"key":"{text.subtitle.weight}"},"name":"text-subtitle-weight","attributes":{},"path":["text","subtitle","weight"],"value":400,"type":"fontWeight"},"text-title-lineHeight-large":{"key":"{text.title.lineHeight.large}","$extensions":{"org.primer.data":{"fontSize":32},"org.primer.figma":{"collection":"typography","scopes":["lineHeight"]}},"filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":1.5,"$type":"number","$extensions":{"org.primer.data":{"fontSize":32},"org.primer.figma":{"collection":"typography","scopes":["lineHeight"]}},"key":"{text.title.lineHeight.large}"},"name":"text-title-lineHeight-large","attributes":{},"path":["text","title","lineHeight","large"],"value":1.5,"type":"number"},"text-title-lineHeight-medium":{"key":"{text.title.lineHeight.medium}","$extensions":{"org.primer.data":{"fontSize":20},"org.primer.figma":{"collection":"typography","scopes":["lineHeight"]}},"filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":1.6,"$type":"number","$extensions":{"org.primer.data":{"fontSize":20},"org.primer.figma":{"collection":"typography","scopes":["lineHeight"]}},"key":"{text.title.lineHeight.medium}"},"name":"text-title-lineHeight-medium","attributes":{},"path":["text","title","lineHeight","medium"],"value":1.6,"type":"number"},"text-title-lineHeight-small":{"key":"{text.title.lineHeight.small}","$extensions":{"org.primer.data":{"fontSize":16},"org.primer.figma":{"collection":"typography","scopes":["lineHeight"]}},"filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":1.5,"$type":"number","$extensions":{"org.primer.data":{"fontSize":16},"org.primer.figma":{"collection":"typography","scopes":["lineHeight"]}},"key":"{text.title.lineHeight.small}"},"name":"text-title-lineHeight-small","attributes":{},"path":["text","title","lineHeight","small"],"value":1.5,"type":"number"},"text-title-shorthand-large":{"key":"{text.title.shorthand.large}","filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":{"fontWeight":"{text.title.weight.large}","fontSize":"{text.title.size.large}","lineHeight":"{text.title.lineHeight.large}","fontFamily":"{fontStack.sansSerifDisplay}"},"$type":"typography","$description":"Page headings for user-created objects, such as issues or pull requests. Utilize title (medium) styles on narrow viewports.","key":"{text.title.shorthand.large}"},"name":"text-title-shorthand-large","attributes":{},"path":["text","title","shorthand","large"],"value":"600 2rem/1.5 -apple-system, BlinkMacSystemFont, \'Segoe UI\', \'Noto Sans\', Helvetica, Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\'","type":"typography","description":"Page headings for user-created objects, such as issues or pull requests. Utilize title (medium) styles on narrow viewports."},"text-title-shorthand-medium":{"key":"{text.title.shorthand.medium}","filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":{"fontWeight":"{text.title.weight.medium}","fontSize":"{text.title.size.medium}","lineHeight":"{text.title.lineHeight.medium}","fontFamily":"{fontStack.sansSerifDisplay}"},"$type":"typography","$description":"Default page title. The 32px-equivalent line-height matches with button and other medium control heights. Great for page header composition.","key":"{text.title.shorthand.medium}"},"name":"text-title-shorthand-medium","attributes":{},"path":["text","title","shorthand","medium"],"value":"600 1.25rem/1.6 -apple-system, BlinkMacSystemFont, \'Segoe UI\', \'Noto Sans\', Helvetica, Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\'","type":"typography","description":"Default page title. The 32px-equivalent line-height matches with button and other medium control heights. Great for page header composition."},"text-title-shorthand-small":{"key":"{text.title.shorthand.small}","filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":{"fontWeight":"{text.title.weight.small}","fontSize":"{text.title.size.small}","lineHeight":"{text.title.lineHeight.small}","fontFamily":"{fontStack.sansSerif}"},"$type":"typography","$description":"Uses the same size as body (large) with a heavier weight of semibold (600).","key":"{text.title.shorthand.small}"},"name":"text-title-shorthand-small","attributes":{},"path":["text","title","shorthand","small"],"value":"600 1rem/1.5 -apple-system, BlinkMacSystemFont, \'Segoe UI\', \'Noto Sans\', Helvetica, Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\'","type":"typography","description":"Uses the same size as body (large) with a heavier weight of semibold (600)."},"text-title-size-large":{"key":"{text.title.size.large}","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontSize"]}},"filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":"32px","$type":"dimension","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontSize"]}},"key":"{text.title.size.large}"},"name":"text-title-size-large","attributes":{},"path":["text","title","size","large"],"value":"2rem","type":"dimension"},"text-title-size-medium":{"key":"{text.title.size.medium}","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontSize"]}},"filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":"20px","$type":"dimension","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontSize"]}},"key":"{text.title.size.medium}"},"name":"text-title-size-medium","attributes":{},"path":["text","title","size","medium"],"value":"1.25rem","type":"dimension"},"text-title-size-small":{"key":"{text.title.size.small}","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontSize"]}},"filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":"16px","$type":"dimension","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontSize"]}},"key":"{text.title.size.small}"},"name":"text-title-size-small","attributes":{},"path":["text","title","size","small"],"value":"1rem","type":"dimension"},"text-title-weight-large":{"key":"{text.title.weight.large}","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontWeight"]}},"filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":"{base.text.weight.semibold}","$type":"fontWeight","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontWeight"]}},"key":"{text.title.weight.large}"},"name":"text-title-weight-large","attributes":{},"path":["text","title","weight","large"],"value":600,"type":"fontWeight"},"text-title-weight-medium":{"key":"{text.title.weight.medium}","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontWeight"]}},"filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":"{base.text.weight.semibold}","$type":"fontWeight","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontWeight"]}},"key":"{text.title.weight.medium}"},"name":"text-title-weight-medium","attributes":{},"path":["text","title","weight","medium"],"value":600,"type":"fontWeight"},"text-title-weight-small":{"key":"{text.title.weight.small}","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontWeight"]}},"filePath":"src/tokens/functional/typography/typography.json5","isSource":true,"original":{"$value":"{base.text.weight.semibold}","$type":"fontWeight","$extensions":{"org.primer.figma":{"collection":"typography","scopes":["fontWeight"]}},"key":"{text.title.weight.small}"},"name":"text-title-weight-small","attributes":{},"path":["text","title","weight","small"],"value":600,"type":"fontWeight"}}');var DataTable=__webpack_require__("./node_modules/@primer/react/lib-esm/DataTable/index.js"),DataTable_DataTable=__webpack_require__("./node_modules/@primer/react/lib-esm/DataTable/DataTable.js"),InlineCode=__webpack_require__("./stories/StorybookComponents/InlineCode/InlineCode.tsx"),TypographyDemo=__webpack_require__("./stories/StorybookComponents/TypographyDemo/TypographyDemo.tsx"),getTokensByName=__webpack_require__("./stories/utilities/getTokensByName.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Functional_stories={title:"Typography/Functional",parameters:{controls:{hideNoControlsWarning:!0},tags:["snapshotLight"]}},FontFamily=()=>{const data=(0,getTokensByName.R)(typography_namespaceObject,"fontStack").map(token=>({id:token.name,...token}));return(0,jsx_runtime.jsxs)(DataTable.X.Container,{children:[(0,jsx_runtime.jsx)("h1",{className:"sr-only",id:"type",children:"Font family"}),(0,jsx_runtime.jsx)(DataTable_DataTable.b,{"aria-labelledby":"type",data,columns:[{header:"Sample",field:"name",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)(TypographyDemo.x,{fontFamily:row.name,fontSize:"text-title-size-medium",fontWeight:"base-text-weight-normal",children:row.name.split("-").pop().split("-").pop()})},{header:"Token",field:"name",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)(InlineCode.R,{value:row.name,copyClipboard:!0})},{header:"Output value",field:"value",rowHeader:!0,width:"auto",renderCell:row=>(0,jsx_runtime.jsx)("p",{children:row.value})}]})]})};FontFamily.displayName="FontFamily",FontFamily.tags=["excludeSnapshot"];const FontShorthand=()=>{const filteredData=(0,getTokensByName.R)(typography_namespaceObject,"text").map(token=>({id:token.name,...token})).filter(item=>item.id.includes("shorthand"));return(0,jsx_runtime.jsxs)(DataTable.X.Container,{children:[(0,jsx_runtime.jsx)("h1",{className:"sr-only",id:"type",children:"Font shorthand"}),(0,jsx_runtime.jsx)(DataTable_DataTable.b,{"aria-labelledby":"type",data:filteredData,columns:[{header:"Sample",field:"name",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)(TypographyDemo.x,{fontShorthand:row.name,children:row.name.split("-")[1]})},{header:"Token",field:"name",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)(InlineCode.R,{value:row.name,copyClipboard:!0})},{header:"Source value",field:"original",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsxs)("p",{children:["font-weight: ",(0,jsx_runtime.jsx)("code",{children:row.original.$value.fontSize})]}),(0,jsx_runtime.jsxs)("p",{children:["font-size: ",(0,jsx_runtime.jsx)("code",{children:row.original.$value.fontSize})]}),(0,jsx_runtime.jsxs)("p",{children:["font-family: ",(0,jsx_runtime.jsx)("code",{children:row.original.$value.fontFamily})]}),row.original.$value.lineHeight&&(0,jsx_runtime.jsxs)("p",{children:["line-height: ",(0,jsx_runtime.jsx)("code",{children:row.original.$value.lineHeight})]})]})}]})]})};FontShorthand.displayName="FontShorthand",FontShorthand.tags=["excludeSnapshot"];const Display=()=>{const filteredData=(0,getTokensByName.R)(typography_namespaceObject,"text").map(token=>({id:token.name,...token})).filter(item=>!item.id.includes("shorthand")&&item.id.includes("display"));return(0,jsx_runtime.jsxs)(DataTable.X.Container,{children:[(0,jsx_runtime.jsx)(TypographyDemo.x,{container:!0,id:"type",fontShorthand:"text-display-shorthand",children:"Display"}),(0,jsx_runtime.jsx)(DataTable_DataTable.b,{"aria-labelledby":"type",data:filteredData,columns:[{header:"Property",field:"name",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)("code",{children:row.name.includes("size")?"font-size":row.name.includes("weight")?"font-weight":row.name.includes("lineHeight")?"line-height":row.name.includes("lineBoxHeight")?"height":row.name.includes("shorthand")?"font":void 0})},{header:"Token",field:"name",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)(InlineCode.R,{value:row.name,copyClipboard:!0})},{header:"Output value",field:"value",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)("p",{children:row.value})},{header:"Source value",field:"original",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)("p",{children:row.name.includes("shorthand")?void 0:row.original.$value})}]})]})};Display.displayName="Display",Display.tags=["excludeSnapshot"];const TitleLarge=()=>{const filteredData=(0,getTokensByName.R)(typography_namespaceObject,"text").map(token=>({id:token.name,...token})).filter(item=>!item.id.includes("shorthand")&&item.id.includes("title")&&item.id.includes("large"));return(0,jsx_runtime.jsxs)(DataTable.X.Container,{children:[(0,jsx_runtime.jsx)(TypographyDemo.x,{container:!0,id:"type",fontShorthand:"text-title-shorthand-large",children:"Title large"}),(0,jsx_runtime.jsx)(DataTable_DataTable.b,{"aria-labelledby":"type",data:filteredData,columns:[{header:"Property",field:"name",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)("code",{children:row.name.includes("size")?"font-size":row.name.includes("weight")?"font-weight":row.name.includes("lineHeight")?"line-height":row.name.includes("lineBoxHeight")?"height":row.name.includes("shorthand")?"font":void 0})},{header:"Token",field:"name",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)(InlineCode.R,{value:row.name,copyClipboard:!0})},{header:"Output value",field:"value",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)("p",{children:row.value})},{header:"Source value",field:"original",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)("p",{children:row.name.includes("shorthand")?void 0:row.original.$value})}]})]})};TitleLarge.displayName="TitleLarge",TitleLarge.tags=["excludeSnapshot"];const TitleMedium=()=>{const filteredData=(0,getTokensByName.R)(typography_namespaceObject,"text").map(token=>({id:token.name,...token})).filter(item=>!item.id.includes("shorthand")&&item.id.includes("title")&&item.id.includes("medium"));return(0,jsx_runtime.jsxs)(DataTable.X.Container,{children:[(0,jsx_runtime.jsx)(TypographyDemo.x,{container:!0,id:"type",fontShorthand:"text-title-shorthand-medium",children:"Title medium"}),(0,jsx_runtime.jsx)(DataTable_DataTable.b,{"aria-labelledby":"type",data:filteredData,columns:[{header:"Property",field:"name",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)("code",{children:row.name.includes("size")?"font-size":row.name.includes("weight")?"font-weight":row.name.includes("lineHeight")?"line-height":row.name.includes("lineBoxHeight")?"height":row.name.includes("shorthand")?"font":void 0})},{header:"Token",field:"name",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)(InlineCode.R,{value:row.name,copyClipboard:!0})},{header:"Output value",field:"value",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)("p",{children:row.value})},{header:"Source value",field:"original",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)("p",{children:row.name.includes("shorthand")?void 0:row.original.$value})}]})]})};TitleMedium.displayName="TitleMedium",TitleMedium.tags=["excludeSnapshot"];const TitleSmall=()=>{const filteredData=(0,getTokensByName.R)(typography_namespaceObject,"text").map(token=>({id:token.name,...token})).filter(item=>!item.id.includes("shorthand")&&item.id.includes("title")&&item.id.includes("small"));return(0,jsx_runtime.jsxs)(DataTable.X.Container,{children:[(0,jsx_runtime.jsx)(TypographyDemo.x,{container:!0,id:"type",fontShorthand:"text-title-shorthand-small",children:"Title small"}),(0,jsx_runtime.jsx)(DataTable_DataTable.b,{"aria-labelledby":"type",data:filteredData,columns:[{header:"Property",field:"name",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)("code",{children:row.name.includes("size")?"font-size":row.name.includes("weight")?"font-weight":row.name.includes("lineHeight")?"line-height":row.name.includes("lineBoxHeight")?"height":row.name.includes("shorthand")?"font":void 0})},{header:"Token",field:"name",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)(InlineCode.R,{value:row.name,copyClipboard:!0})},{header:"Output value",field:"value",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)("p",{children:row.value})},{header:"Source value",field:"original",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)("p",{children:row.name.includes("shorthand")?void 0:row.original.$value})}]})]})};TitleSmall.displayName="TitleSmall",TitleSmall.tags=["excludeSnapshot"];const Subtitle=()=>{const filteredData=(0,getTokensByName.R)(typography_namespaceObject,"text").map(token=>({id:token.name,...token})).filter(item=>!item.id.includes("shorthand")&&item.id.includes("subtitle"));return(0,jsx_runtime.jsxs)(DataTable.X.Container,{children:[(0,jsx_runtime.jsx)(TypographyDemo.x,{container:!0,id:"type",fontShorthand:"text-subtitle-shorthand",children:"Subtitle"}),(0,jsx_runtime.jsx)(DataTable_DataTable.b,{"aria-labelledby":"type",data:filteredData,columns:[{header:"Property",field:"name",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)("code",{children:row.name.includes("size")?"font-size":row.name.includes("weight")?"font-weight":row.name.includes("lineHeight")?"line-height":row.name.includes("lineBoxHeight")?"height":row.name.includes("shorthand")?"font":void 0})},{header:"Token",field:"name",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)(InlineCode.R,{value:row.name,copyClipboard:!0})},{header:"Output value",field:"value",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)("p",{children:row.value})},{header:"Source value",field:"original",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)("p",{children:row.name.includes("shorthand")?void 0:row.original.$value})}]})]})};Subtitle.displayName="Subtitle",Subtitle.tags=["excludeSnapshot"];const BodyLarge=()=>{const filteredData=(0,getTokensByName.R)(typography_namespaceObject,"text").map(token=>({id:token.name,...token})).filter(item=>!item.id.includes("shorthand")&&item.id.includes("body")&&item.id.includes("large"));return(0,jsx_runtime.jsxs)(DataTable.X.Container,{children:[(0,jsx_runtime.jsx)(TypographyDemo.x,{container:!0,id:"type",fontShorthand:"text-body-shorthand-large",children:"Body large"}),(0,jsx_runtime.jsx)(DataTable_DataTable.b,{"aria-labelledby":"type",data:filteredData,columns:[{header:"Property",field:"name",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)("code",{children:row.name.includes("size")?"font-size":row.name.includes("weight")?"font-weight":row.name.includes("lineHeight")?"line-height":row.name.includes("lineBoxHeight")?"height":row.name.includes("shorthand")?"font":void 0})},{header:"Token",field:"name",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)(InlineCode.R,{value:row.name,copyClipboard:!0})},{header:"Output value",field:"value",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)("p",{children:row.value})},{header:"Source value",field:"original",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)("p",{children:row.name.includes("shorthand")?void 0:row.original.$value})}]})]})};BodyLarge.displayName="BodyLarge",BodyLarge.tags=["excludeSnapshot"];const BodyMedium=()=>{const filteredData=(0,getTokensByName.R)(typography_namespaceObject,"text").map(token=>({id:token.name,...token})).filter(item=>!item.id.includes("shorthand")&&item.id.includes("body")&&item.id.includes("medium"));return(0,jsx_runtime.jsxs)(DataTable.X.Container,{children:[(0,jsx_runtime.jsx)(TypographyDemo.x,{container:!0,id:"type",fontShorthand:"text-body-shorthand-medium",children:"Body medium"}),(0,jsx_runtime.jsx)(DataTable_DataTable.b,{"aria-labelledby":"type",data:filteredData,columns:[{header:"Property",field:"name",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)("code",{children:row.name.includes("size")?"font-size":row.name.includes("weight")?"font-weight":row.name.includes("lineHeight")?"line-height":row.name.includes("lineBoxHeight")?"height":row.name.includes("shorthand")?"font":void 0})},{header:"Token",field:"name",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)(InlineCode.R,{value:row.name,copyClipboard:!0})},{header:"Output value",field:"value",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)("p",{children:row.value})},{header:"Source value",field:"original",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)("p",{children:row.name.includes("shorthand")?void 0:row.original.$value})}]})]})};BodyMedium.displayName="BodyMedium",BodyMedium.tags=["excludeSnapshot"];const BodySmall=()=>{const filteredData=(0,getTokensByName.R)(typography_namespaceObject,"text").map(token=>({id:token.name,...token})).filter(item=>!item.id.includes("shorthand")&&item.id.includes("body")&&item.id.includes("small"));return(0,jsx_runtime.jsxs)(DataTable.X.Container,{children:[(0,jsx_runtime.jsx)(TypographyDemo.x,{container:!0,id:"type",fontShorthand:"text-body-shorthand-small",children:"Body small"}),(0,jsx_runtime.jsx)(DataTable_DataTable.b,{"aria-labelledby":"type",data:filteredData,columns:[{header:"Property",field:"name",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)("code",{children:row.name.includes("size")?"font-size":row.name.includes("weight")?"font-weight":row.name.includes("lineHeight")?"line-height":row.name.includes("lineBoxHeight")?"height":row.name.includes("shorthand")?"font":void 0})},{header:"Token",field:"name",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)(InlineCode.R,{value:row.name,copyClipboard:!0})},{header:"Output value",field:"value",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)("p",{children:row.value})},{header:"Source value",field:"original",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)("p",{children:row.name.includes("shorthand")?void 0:row.original.$value})}]})]})};BodySmall.displayName="BodySmall",BodySmall.tags=["excludeSnapshot"];const Caption=()=>{const filteredData=(0,getTokensByName.R)(typography_namespaceObject,"text").map(token=>({id:token.name,...token})).filter(item=>!item.id.includes("shorthand")&&item.id.includes("caption"));return(0,jsx_runtime.jsxs)(DataTable.X.Container,{children:[(0,jsx_runtime.jsx)(TypographyDemo.x,{container:!0,id:"type",fontShorthand:"text-caption-shorthand",children:"Caption"}),(0,jsx_runtime.jsx)(DataTable_DataTable.b,{"aria-labelledby":"type",data:filteredData,columns:[{header:"Property",field:"name",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)("code",{children:row.name.includes("size")?"font-size":row.name.includes("weight")?"font-weight":row.name.includes("lineHeight")?"line-height":row.name.includes("lineBoxHeight")?"height":row.name.includes("shorthand")?"font":void 0})},{header:"Token",field:"name",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)(InlineCode.R,{value:row.name,copyClipboard:!0})},{header:"Output value",field:"value",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)("p",{children:row.value})},{header:"Source value",field:"original",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)("p",{children:row.name.includes("shorthand")?void 0:row.original.$value})}]})]})};Caption.displayName="Caption",Caption.tags=["excludeSnapshot"];const CodeBlock=()=>{const filteredData=(0,getTokensByName.R)(typography_namespaceObject,"text").map(token=>({id:token.name,...token})).filter(item=>!item.id.includes("shorthand")&&item.id.includes("codeBlock"));return(0,jsx_runtime.jsxs)(DataTable.X.Container,{children:[(0,jsx_runtime.jsx)(TypographyDemo.x,{container:!0,id:"type",fontShorthand:"text-codeBlock-shorthand",children:"Code block"}),(0,jsx_runtime.jsx)(DataTable_DataTable.b,{"aria-labelledby":"type",data:filteredData,columns:[{header:"Property",field:"name",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)("code",{children:row.name.includes("size")?"font-size":row.name.includes("weight")?"font-weight":row.name.includes("lineHeight")?"line-height":row.name.includes("lineBoxHeight")?"height":row.name.includes("shorthand")?"font":void 0})},{header:"Token",field:"name",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)(InlineCode.R,{value:row.name,copyClipboard:!0})},{header:"Output value",field:"value",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)("p",{children:row.value})},{header:"Source value",field:"original",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)("p",{children:row.name.includes("shorthand")?void 0:row.original.$value})}]})]})};CodeBlock.displayName="CodeBlock",CodeBlock.tags=["excludeSnapshot"];const InlineCodeBlock=()=>{const filteredData=(0,getTokensByName.R)(typography_namespaceObject,"text").map(token=>({id:token.name,...token})).filter(item=>!item.id.includes("shorthand")&&item.id.includes("codeInline"));return(0,jsx_runtime.jsxs)(DataTable.X.Container,{children:[(0,jsx_runtime.jsx)(TypographyDemo.x,{container:!0,id:"type",fontShorthand:"text-codeInline-shorthand",children:"Inline code block"}),(0,jsx_runtime.jsx)(DataTable_DataTable.b,{"aria-labelledby":"type",data:filteredData,columns:[{header:"Property",field:"name",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)("code",{children:row.name.includes("size")?"font-size":row.name.includes("weight")?"font-weight":row.name.includes("lineHeight")?"line-height":row.name.includes("lineBoxHeight")?"height":row.name.includes("shorthand")?"font":void 0})},{header:"Token",field:"name",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)(InlineCode.R,{value:row.name,copyClipboard:!0})},{header:"Output value",field:"value",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)("p",{children:row.value})},{header:"Source value",field:"original",rowHeader:!0,renderCell:row=>(0,jsx_runtime.jsx)("p",{children:row.name.includes("shorthand")?void 0:row.original.$value})}]})]})};InlineCodeBlock.displayName="InlineCodeBlock",InlineCodeBlock.tags=["excludeSnapshot"];const Overview=()=>{const filteredData=(0,getTokensByName.R)(typography_namespaceObject,"text").map(token=>({id:token.name,...token})).filter(item=>item.id.includes("shorthand"));return(0,jsx_runtime.jsxs)(DataTable.X.Container,{children:[(0,jsx_runtime.jsx)("h1",{className:"sr-only",id:"type",children:"Overview"}),(0,jsx_runtime.jsx)(DataTable_DataTable.b,{"aria-labelledby":"type",data:filteredData,columns:[{header:"Sample",field:"name",rowHeader:!0,width:"auto",renderCell:row=>(0,jsx_runtime.jsxs)(TypographyDemo.x,{fontShorthand:row.name,children:[row.name.split("-")[1],row.name.includes("large")?" large":row.name.includes("small")?" small":row.name.includes("medium")?" medium":void 0]})},{header:"Description",field:"description",rowHeader:!0,width:"auto",renderCell:row=>(0,jsx_runtime.jsx)("p",{style:{fontSize:"var(--text-body-size-medium)",lineHeight:"var(--text-body-lineHeight-medium)",fontWeight:"var(--base-text-weight-normal",marginBottom:"0"},children:row.description})}]})]})};Overview.displayName="Overview",FontFamily.parameters={...FontFamily.parameters,docs:{...FontFamily.parameters?.docs,source:{originalSource:"() => {\n  const data = getTokensByName(sizeTokens, 'fontStack').map(token => {\n    return {\n      id: token.name,\n      ...token\n    };\n  });\n  return <Table.Container>\n      <h1 className=\"sr-only\" id=\"type\">\n        Font family\n      </h1>\n      <DataTable aria-labelledby=\"type\" data={data} columns={[{\n      header: 'Sample',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <TypographyDemo fontFamily={row.name} fontSize=\"text-title-size-medium\" fontWeight=\"base-text-weight-normal\">\n                  {row.name.split('-').pop().split('-').pop()}\n                </TypographyDemo>;\n      }\n    }, {\n      header: 'Token',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <InlineCode value={row.name} copyClipboard />;\n      }\n    }, {\n      header: 'Output value',\n      field: 'value',\n      rowHeader: true,\n      width: 'auto',\n      renderCell: row => {\n        return <p>{row.value}</p>;\n      }\n    }]} />\n    </Table.Container>;\n}",...FontFamily.parameters?.docs?.source}}},FontShorthand.parameters={...FontShorthand.parameters,docs:{...FontShorthand.parameters?.docs,source:{originalSource:"() => {\n  const data = getTokensByName(sizeTokens, 'text').map(token => {\n    return {\n      id: token.name,\n      ...token\n    };\n  });\n  const filteredData = data.filter(item => item.id.includes('shorthand'));\n  return <Table.Container>\n      <h1 className=\"sr-only\" id=\"type\">\n        Font shorthand\n      </h1>\n      <DataTable aria-labelledby=\"type\" data={filteredData} columns={[{\n      header: 'Sample',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <TypographyDemo fontShorthand={row.name}>{row.name.split('-')[1]}</TypographyDemo>;\n      }\n    }, {\n      header: 'Token',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <InlineCode value={row.name} copyClipboard />;\n      }\n    }, {\n      header: 'Source value',\n      field: 'original',\n      rowHeader: true,\n      renderCell: row => {\n        return <div>\n                  <p>\n                    font-weight: <code>{row.original.$value.fontSize}</code>\n                  </p>\n                  <p>\n                    font-size: <code>{row.original.$value.fontSize}</code>\n                  </p>\n                  <p>\n                    font-family: <code>{row.original.$value.fontFamily}</code>\n                  </p>\n                  {row.original.$value.lineHeight && <p>\n                      line-height: <code>{row.original.$value.lineHeight}</code>\n                    </p>}\n                </div>;\n      }\n    }]} />\n    </Table.Container>;\n}",...FontShorthand.parameters?.docs?.source}}},Display.parameters={...Display.parameters,docs:{...Display.parameters?.docs,source:{originalSource:"() => {\n  const data = getTokensByName(sizeTokens, 'text').map(token => {\n    return {\n      id: token.name,\n      ...token\n    };\n  });\n  const filteredData = data.filter(item => !item.id.includes('shorthand') && item.id.includes('display'));\n  return <Table.Container>\n      <TypographyDemo container id=\"type\" fontShorthand=\"text-display-shorthand\">\n        Display\n      </TypographyDemo>\n      <DataTable aria-labelledby=\"type\" data={filteredData} columns={[{\n      header: 'Property',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <code>\n                  {row.name.includes('size') ? 'font-size' : row.name.includes('weight') ? 'font-weight' : row.name.includes('lineHeight') ? 'line-height' : row.name.includes('lineBoxHeight') ? 'height' : row.name.includes('shorthand') ? 'font' : undefined}\n                </code>;\n      }\n    }, {\n      header: 'Token',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <InlineCode value={row.name} copyClipboard />;\n      }\n    }, {\n      header: 'Output value',\n      field: 'value',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.value}</p>;\n      }\n    }, {\n      header: 'Source value',\n      field: 'original',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.name.includes('shorthand') ? undefined : row.original.$value}</p>;\n      }\n    }]} />\n    </Table.Container>;\n}",...Display.parameters?.docs?.source}}},TitleLarge.parameters={...TitleLarge.parameters,docs:{...TitleLarge.parameters?.docs,source:{originalSource:"() => {\n  const data = getTokensByName(sizeTokens, 'text').map(token => {\n    return {\n      id: token.name,\n      ...token\n    };\n  });\n  const filteredData = data.filter(item => !item.id.includes('shorthand') && item.id.includes('title') && item.id.includes('large'));\n  return <Table.Container>\n      <TypographyDemo container id=\"type\" fontShorthand=\"text-title-shorthand-large\">\n        Title large\n      </TypographyDemo>\n\n      <DataTable aria-labelledby=\"type\" data={filteredData} columns={[{\n      header: 'Property',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <code>\n                  {row.name.includes('size') ? 'font-size' : row.name.includes('weight') ? 'font-weight' : row.name.includes('lineHeight') ? 'line-height' : row.name.includes('lineBoxHeight') ? 'height' : row.name.includes('shorthand') ? 'font' : undefined}\n                </code>;\n      }\n    }, {\n      header: 'Token',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <InlineCode value={row.name} copyClipboard />;\n      }\n    }, {\n      header: 'Output value',\n      field: 'value',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.value}</p>;\n      }\n    }, {\n      header: 'Source value',\n      field: 'original',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.name.includes('shorthand') ? undefined : row.original.$value}</p>;\n      }\n    }]} />\n    </Table.Container>;\n}",...TitleLarge.parameters?.docs?.source}}},TitleMedium.parameters={...TitleMedium.parameters,docs:{...TitleMedium.parameters?.docs,source:{originalSource:"() => {\n  const data = getTokensByName(sizeTokens, 'text').map(token => {\n    return {\n      id: token.name,\n      ...token\n    };\n  });\n  const filteredData = data.filter(item => !item.id.includes('shorthand') && item.id.includes('title') && item.id.includes('medium'));\n  return <Table.Container>\n      <TypographyDemo container id=\"type\" fontShorthand=\"text-title-shorthand-medium\">\n        Title medium\n      </TypographyDemo>\n\n      <DataTable aria-labelledby=\"type\" data={filteredData} columns={[{\n      header: 'Property',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <code>\n                  {row.name.includes('size') ? 'font-size' : row.name.includes('weight') ? 'font-weight' : row.name.includes('lineHeight') ? 'line-height' : row.name.includes('lineBoxHeight') ? 'height' : row.name.includes('shorthand') ? 'font' : undefined}\n                </code>;\n      }\n    }, {\n      header: 'Token',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <InlineCode value={row.name} copyClipboard />;\n      }\n    }, {\n      header: 'Output value',\n      field: 'value',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.value}</p>;\n      }\n    }, {\n      header: 'Source value',\n      field: 'original',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.name.includes('shorthand') ? undefined : row.original.$value}</p>;\n      }\n    }]} />\n    </Table.Container>;\n}",...TitleMedium.parameters?.docs?.source}}},TitleSmall.parameters={...TitleSmall.parameters,docs:{...TitleSmall.parameters?.docs,source:{originalSource:"() => {\n  const data = getTokensByName(sizeTokens, 'text').map(token => {\n    return {\n      id: token.name,\n      ...token\n    };\n  });\n  const filteredData = data.filter(item => !item.id.includes('shorthand') && item.id.includes('title') && item.id.includes('small'));\n  return <Table.Container>\n      <TypographyDemo container id=\"type\" fontShorthand=\"text-title-shorthand-small\">\n        Title small\n      </TypographyDemo>\n\n      <DataTable aria-labelledby=\"type\" data={filteredData} columns={[{\n      header: 'Property',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <code>\n                  {row.name.includes('size') ? 'font-size' : row.name.includes('weight') ? 'font-weight' : row.name.includes('lineHeight') ? 'line-height' : row.name.includes('lineBoxHeight') ? 'height' : row.name.includes('shorthand') ? 'font' : undefined}\n                </code>;\n      }\n    }, {\n      header: 'Token',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <InlineCode value={row.name} copyClipboard />;\n      }\n    }, {\n      header: 'Output value',\n      field: 'value',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.value}</p>;\n      }\n    }, {\n      header: 'Source value',\n      field: 'original',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.name.includes('shorthand') ? undefined : row.original.$value}</p>;\n      }\n    }]} />\n    </Table.Container>;\n}",...TitleSmall.parameters?.docs?.source}}},Subtitle.parameters={...Subtitle.parameters,docs:{...Subtitle.parameters?.docs,source:{originalSource:"() => {\n  const data = getTokensByName(sizeTokens, 'text').map(token => {\n    return {\n      id: token.name,\n      ...token\n    };\n  });\n  const filteredData = data.filter(item => !item.id.includes('shorthand') && item.id.includes('subtitle'));\n  return <Table.Container>\n      <TypographyDemo container id=\"type\" fontShorthand=\"text-subtitle-shorthand\">\n        Subtitle\n      </TypographyDemo>\n\n      <DataTable aria-labelledby=\"type\" data={filteredData} columns={[{\n      header: 'Property',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <code>\n                  {row.name.includes('size') ? 'font-size' : row.name.includes('weight') ? 'font-weight' : row.name.includes('lineHeight') ? 'line-height' : row.name.includes('lineBoxHeight') ? 'height' : row.name.includes('shorthand') ? 'font' : undefined}\n                </code>;\n      }\n    }, {\n      header: 'Token',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <InlineCode value={row.name} copyClipboard />;\n      }\n    }, {\n      header: 'Output value',\n      field: 'value',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.value}</p>;\n      }\n    }, {\n      header: 'Source value',\n      field: 'original',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.name.includes('shorthand') ? undefined : row.original.$value}</p>;\n      }\n    }]} />\n    </Table.Container>;\n}",...Subtitle.parameters?.docs?.source}}},BodyLarge.parameters={...BodyLarge.parameters,docs:{...BodyLarge.parameters?.docs,source:{originalSource:"() => {\n  const data = getTokensByName(sizeTokens, 'text').map(token => {\n    return {\n      id: token.name,\n      ...token\n    };\n  });\n  const filteredData = data.filter(item => !item.id.includes('shorthand') && item.id.includes('body') && item.id.includes('large'));\n  return <Table.Container>\n      <TypographyDemo container id=\"type\" fontShorthand=\"text-body-shorthand-large\">\n        Body large\n      </TypographyDemo>\n\n      <DataTable aria-labelledby=\"type\" data={filteredData} columns={[{\n      header: 'Property',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <code>\n                  {row.name.includes('size') ? 'font-size' : row.name.includes('weight') ? 'font-weight' : row.name.includes('lineHeight') ? 'line-height' : row.name.includes('lineBoxHeight') ? 'height' : row.name.includes('shorthand') ? 'font' : undefined}\n                </code>;\n      }\n    }, {\n      header: 'Token',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <InlineCode value={row.name} copyClipboard />;\n      }\n    }, {\n      header: 'Output value',\n      field: 'value',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.value}</p>;\n      }\n    }, {\n      header: 'Source value',\n      field: 'original',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.name.includes('shorthand') ? undefined : row.original.$value}</p>;\n      }\n    }]} />\n    </Table.Container>;\n}",...BodyLarge.parameters?.docs?.source}}},BodyMedium.parameters={...BodyMedium.parameters,docs:{...BodyMedium.parameters?.docs,source:{originalSource:"() => {\n  const data = getTokensByName(sizeTokens, 'text').map(token => {\n    return {\n      id: token.name,\n      ...token\n    };\n  });\n  const filteredData = data.filter(item => !item.id.includes('shorthand') && item.id.includes('body') && item.id.includes('medium'));\n  return <Table.Container>\n      <TypographyDemo container id=\"type\" fontShorthand=\"text-body-shorthand-medium\">\n        Body medium\n      </TypographyDemo>\n\n      <DataTable aria-labelledby=\"type\" data={filteredData} columns={[{\n      header: 'Property',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <code>\n                  {row.name.includes('size') ? 'font-size' : row.name.includes('weight') ? 'font-weight' : row.name.includes('lineHeight') ? 'line-height' : row.name.includes('lineBoxHeight') ? 'height' : row.name.includes('shorthand') ? 'font' : undefined}\n                </code>;\n      }\n    }, {\n      header: 'Token',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <InlineCode value={row.name} copyClipboard />;\n      }\n    }, {\n      header: 'Output value',\n      field: 'value',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.value}</p>;\n      }\n    }, {\n      header: 'Source value',\n      field: 'original',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.name.includes('shorthand') ? undefined : row.original.$value}</p>;\n      }\n    }]} />\n    </Table.Container>;\n}",...BodyMedium.parameters?.docs?.source}}},BodySmall.parameters={...BodySmall.parameters,docs:{...BodySmall.parameters?.docs,source:{originalSource:"() => {\n  const data = getTokensByName(sizeTokens, 'text').map(token => {\n    return {\n      id: token.name,\n      ...token\n    };\n  });\n  const filteredData = data.filter(item => !item.id.includes('shorthand') && item.id.includes('body') && item.id.includes('small'));\n  return <Table.Container>\n      <TypographyDemo container id=\"type\" fontShorthand=\"text-body-shorthand-small\">\n        Body small\n      </TypographyDemo>\n\n      <DataTable aria-labelledby=\"type\" data={filteredData} columns={[{\n      header: 'Property',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <code>\n                  {row.name.includes('size') ? 'font-size' : row.name.includes('weight') ? 'font-weight' : row.name.includes('lineHeight') ? 'line-height' : row.name.includes('lineBoxHeight') ? 'height' : row.name.includes('shorthand') ? 'font' : undefined}\n                </code>;\n      }\n    }, {\n      header: 'Token',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <InlineCode value={row.name} copyClipboard />;\n      }\n    }, {\n      header: 'Output value',\n      field: 'value',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.value}</p>;\n      }\n    }, {\n      header: 'Source value',\n      field: 'original',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.name.includes('shorthand') ? undefined : row.original.$value}</p>;\n      }\n    }]} />\n    </Table.Container>;\n}",...BodySmall.parameters?.docs?.source}}},Caption.parameters={...Caption.parameters,docs:{...Caption.parameters?.docs,source:{originalSource:"() => {\n  const data = getTokensByName(sizeTokens, 'text').map(token => {\n    return {\n      id: token.name,\n      ...token\n    };\n  });\n  const filteredData = data.filter(item => !item.id.includes('shorthand') && item.id.includes('caption'));\n  return <Table.Container>\n      <TypographyDemo container id=\"type\" fontShorthand=\"text-caption-shorthand\">\n        Caption\n      </TypographyDemo>\n\n      <DataTable aria-labelledby=\"type\" data={filteredData} columns={[{\n      header: 'Property',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <code>\n                  {row.name.includes('size') ? 'font-size' : row.name.includes('weight') ? 'font-weight' : row.name.includes('lineHeight') ? 'line-height' : row.name.includes('lineBoxHeight') ? 'height' : row.name.includes('shorthand') ? 'font' : undefined}\n                </code>;\n      }\n    }, {\n      header: 'Token',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <InlineCode value={row.name} copyClipboard />;\n      }\n    }, {\n      header: 'Output value',\n      field: 'value',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.value}</p>;\n      }\n    }, {\n      header: 'Source value',\n      field: 'original',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.name.includes('shorthand') ? undefined : row.original.$value}</p>;\n      }\n    }]} />\n    </Table.Container>;\n}",...Caption.parameters?.docs?.source}}},CodeBlock.parameters={...CodeBlock.parameters,docs:{...CodeBlock.parameters?.docs,source:{originalSource:"() => {\n  const data = getTokensByName(sizeTokens, 'text').map(token => {\n    return {\n      id: token.name,\n      ...token\n    };\n  });\n  const filteredData = data.filter(item => !item.id.includes('shorthand') && item.id.includes('codeBlock'));\n  return <Table.Container>\n      <TypographyDemo container id=\"type\" fontShorthand=\"text-codeBlock-shorthand\">\n        Code block\n      </TypographyDemo>\n\n      <DataTable aria-labelledby=\"type\" data={filteredData} columns={[{\n      header: 'Property',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <code>\n                  {row.name.includes('size') ? 'font-size' : row.name.includes('weight') ? 'font-weight' : row.name.includes('lineHeight') ? 'line-height' : row.name.includes('lineBoxHeight') ? 'height' : row.name.includes('shorthand') ? 'font' : undefined}\n                </code>;\n      }\n    }, {\n      header: 'Token',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <InlineCode value={row.name} copyClipboard />;\n      }\n    }, {\n      header: 'Output value',\n      field: 'value',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.value}</p>;\n      }\n    }, {\n      header: 'Source value',\n      field: 'original',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.name.includes('shorthand') ? undefined : row.original.$value}</p>;\n      }\n    }]} />\n    </Table.Container>;\n}",...CodeBlock.parameters?.docs?.source}}},InlineCodeBlock.parameters={...InlineCodeBlock.parameters,docs:{...InlineCodeBlock.parameters?.docs,source:{originalSource:"() => {\n  const data = getTokensByName(sizeTokens, 'text').map(token => {\n    return {\n      id: token.name,\n      ...token\n    };\n  });\n  const filteredData = data.filter(item => !item.id.includes('shorthand') && item.id.includes('codeInline'));\n  return <Table.Container>\n      <TypographyDemo container id=\"type\" fontShorthand=\"text-codeInline-shorthand\">\n        Inline code block\n      </TypographyDemo>\n\n      <DataTable aria-labelledby=\"type\" data={filteredData} columns={[{\n      header: 'Property',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <code>\n                  {row.name.includes('size') ? 'font-size' : row.name.includes('weight') ? 'font-weight' : row.name.includes('lineHeight') ? 'line-height' : row.name.includes('lineBoxHeight') ? 'height' : row.name.includes('shorthand') ? 'font' : undefined}\n                </code>;\n      }\n    }, {\n      header: 'Token',\n      field: 'name',\n      rowHeader: true,\n      renderCell: row => {\n        return <InlineCode value={row.name} copyClipboard />;\n      }\n    }, {\n      header: 'Output value',\n      field: 'value',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.value}</p>;\n      }\n    }, {\n      header: 'Source value',\n      field: 'original',\n      rowHeader: true,\n      renderCell: row => {\n        return <p>{row.name.includes('shorthand') ? undefined : row.original.$value}</p>;\n      }\n    }]} />\n    </Table.Container>;\n}",...InlineCodeBlock.parameters?.docs?.source}}},Overview.parameters={...Overview.parameters,docs:{...Overview.parameters?.docs,source:{originalSource:"() => {\n  const data = getTokensByName(sizeTokens, 'text').map(token => {\n    return {\n      id: token.name,\n      ...token\n    };\n  });\n  const filteredData = data.filter(item => item.id.includes('shorthand'));\n  return <Table.Container>\n      <h1 className=\"sr-only\" id=\"type\">\n        Overview\n      </h1>\n      <DataTable aria-labelledby=\"type\" data={filteredData} columns={[{\n      header: 'Sample',\n      field: 'name',\n      rowHeader: true,\n      width: 'auto',\n      renderCell: row => {\n        return <TypographyDemo fontShorthand={row.name}>\n                  {row.name.split('-')[1]}\n                  {row.name.includes('large') ? ' large' : row.name.includes('small') ? ' small' : row.name.includes('medium') ? ' medium' : undefined}\n                </TypographyDemo>;\n      }\n    }, {\n      header: 'Description',\n      field: 'description',\n      rowHeader: true,\n      width: 'auto',\n      renderCell: row => {\n        return <p style={{\n          fontSize: 'var(--text-body-size-medium)',\n          lineHeight: 'var(--text-body-lineHeight-medium)',\n          fontWeight: 'var(--base-text-weight-normal',\n          marginBottom: '0'\n        }}>\n                  {row.description}\n                </p>;\n      }\n    }]} />\n    </Table.Container>;\n}",...Overview.parameters?.docs?.source}}};const __namedExportsOrder=["FontFamily","FontShorthand","Display","TitleLarge","TitleMedium","TitleSmall","Subtitle","BodyLarge","BodyMedium","BodySmall","Caption","CodeBlock","InlineCodeBlock","Overview"]},"./stories/utilities/getTokensByName.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{R:()=>getTokensByName});const getTokensByName=(tokens,name)=>{const separatorRegex=new RegExp("-$","i"),regex=new RegExp(`^${name.replace(separatorRegex,"")}(-|$)`,"i");return Object.values(tokens).filter(token=>regex.test(`${token.name}`))}}}]);